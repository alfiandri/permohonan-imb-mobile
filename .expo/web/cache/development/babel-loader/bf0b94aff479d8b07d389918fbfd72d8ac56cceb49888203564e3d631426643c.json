{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useLinkProps;\nvar _core = require(\"@react-navigation/core\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _LinkingContext = _interopRequireDefault(require(\"./LinkingContext\"));\nvar _useLinkTo = _interopRequireDefault(require(\"./useLinkTo\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar getStateFromParams = function getStateFromParams(params) {\n  if (params !== null && params !== void 0 && params.state) {\n    return params.state;\n  }\n  if (params !== null && params !== void 0 && params.screen) {\n    return {\n      routes: [{\n        name: params.screen,\n        params: params.params,\n        state: params.screen ? getStateFromParams(params.params) : undefined\n      }]\n    };\n  }\n  return undefined;\n};\nfunction useLinkProps(_ref) {\n  var _options$getPathFromS;\n  var to = _ref.to,\n    action = _ref.action;\n  var root = React.useContext(_core.NavigationContainerRefContext);\n  var navigation = React.useContext(_core.NavigationHelpersContext);\n  var _React$useContext = React.useContext(_LinkingContext.default),\n    options = _React$useContext.options;\n  var linkTo = (0, _useLinkTo.default)();\n  var onPress = function onPress(e) {\n    var _e$currentTarget;\n    var shouldHandle = false;\n    if (_reactNative.Platform.OS !== 'web' || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (!e.defaultPrevented && !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0) && [undefined, null, '', 'self'].includes((_e$currentTarget = e.currentTarget) === null || _e$currentTarget === void 0 ? void 0 : _e$currentTarget.target)) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n    if (shouldHandle) {\n      if (action) {\n        if (navigation) {\n          navigation.dispatch(action);\n        } else if (root) {\n          root.dispatch(action);\n        } else {\n          throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n        }\n      } else {\n        linkTo(to);\n      }\n    }\n  };\n  var getPathFromStateHelper = (_options$getPathFromS = options === null || options === void 0 ? void 0 : options.getPathFromState) !== null && _options$getPathFromS !== void 0 ? _options$getPathFromS : _core.getPathFromState;\n  var href = typeof to === 'string' ? to : getPathFromStateHelper({\n    routes: [{\n      name: to.screen,\n      params: to.params,\n      state: getStateFromParams(to.params)\n    }]\n  }, options === null || options === void 0 ? void 0 : options.config);\n  return {\n    href: href,\n    accessibilityRole: 'link',\n    onPress: onPress\n  };\n}","map":{"version":3,"names":["_core","require","React","_interopRequireWildcard","_reactNative","_LinkingContext","_interopRequireDefault","_useLinkTo","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getStateFromParams","params","state","screen","routes","name","undefined","useLinkProps","_ref","_options$getPathFromS","to","action","root","useContext","NavigationContainerRefContext","navigation","NavigationHelpersContext","_React$useContext","LinkingContext","options","linkTo","useLinkTo","onPress","e","_e$currentTarget","shouldHandle","Platform","OS","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","button","includes","currentTarget","target","preventDefault","dispatch","Error","getPathFromStateHelper","getPathFromState","href","config","accessibilityRole"],"sources":["/Users/topremitdevice/Documents/alfi/portofolio/Permohonan-IMB-Mobile/node_modules/@react-navigation/native/lib/module/useLinkProps.tsx"],"sourcesContent":["import {\n  getPathFromState,\n  NavigationAction,\n  NavigationContainerRefContext,\n  NavigationHelpersContext,\n  NavigatorScreenParams,\n  ParamListBase,\n} from '@react-navigation/core';\nimport type { NavigationState, PartialState } from '@react-navigation/routers';\nimport * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport LinkingContext from './LinkingContext';\nimport useLinkTo, { To } from './useLinkTo';\n\ntype Props<ParamList extends ReactNavigation.RootParamList> = {\n  to: To<ParamList>;\n  action?: NavigationAction;\n};\n\nconst getStateFromParams = (\n  params: NavigatorScreenParams<ParamListBase, NavigationState> | undefined\n): PartialState<NavigationState> | NavigationState | undefined => {\n  if (params?.state) {\n    return params.state;\n  }\n\n  if (params?.screen) {\n    return {\n      routes: [\n        {\n          name: params.screen,\n          params: params.params,\n          // @ts-expect-error\n          state: params.screen\n            ? getStateFromParams(\n                params.params as\n                  | NavigatorScreenParams<ParamListBase, NavigationState>\n                  | undefined\n              )\n            : undefined,\n        },\n      ],\n    };\n  }\n\n  return undefined;\n};\n\n/**\n * Hook to get props for an anchor tag so it can work with in page navigation.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n */\nexport default function useLinkProps<\n  ParamList extends ReactNavigation.RootParamList\n>({ to, action }: Props<ParamList>) {\n  const root = React.useContext(NavigationContainerRefContext);\n  const navigation = React.useContext(NavigationHelpersContext);\n  const { options } = React.useContext(LinkingContext);\n  const linkTo = useLinkTo<ParamList>();\n\n  const onPress = (\n    e?: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    let shouldHandle = false;\n\n    if (Platform.OS !== 'web' || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (\n      !e.defaultPrevented && // onPress prevented default\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      (e.button == null || e.button === 0) && // ignore everything but left clicks\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      [undefined, null, '', 'self'].includes(e.currentTarget?.target) // let browser handle \"target=_blank\" etc.\n    ) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n\n    if (shouldHandle) {\n      if (action) {\n        if (navigation) {\n          navigation.dispatch(action);\n        } else if (root) {\n          root.dispatch(action);\n        } else {\n          throw new Error(\n            \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n          );\n        }\n      } else {\n        linkTo(to);\n      }\n    }\n  };\n\n  const getPathFromStateHelper = options?.getPathFromState ?? getPathFromState;\n\n  const href =\n    typeof to === 'string'\n      ? to\n      : getPathFromStateHelper(\n          {\n            routes: [\n              {\n                name: to.screen,\n                // @ts-expect-error\n                params: to.params,\n                // @ts-expect-error\n                state: getStateFromParams(to.params),\n              },\n            ],\n          },\n          options?.config\n        );\n\n  return {\n    href,\n    accessibilityRole: 'link' as const,\n    onPress,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}