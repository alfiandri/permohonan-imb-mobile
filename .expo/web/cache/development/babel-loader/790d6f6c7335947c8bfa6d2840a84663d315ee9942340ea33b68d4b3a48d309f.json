{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _DatePickerIOS = _interopRequireDefault(require(\"./DatePickerIOS\"));\nvar _DatePickerAndroid = _interopRequireDefault(require(\"./DatePickerAndroid\"));\nvar _propTypes = _interopRequireDefault(require(\"./propTypes\"));\nvar _colorToHex = require(\"./colorToHex\");\nvar _propChecker = require(\"./propChecker\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"/Users/topremitdevice/Documents/alfi/portofolio/Permohonan-IMB-Mobile/node_modules/react-native-date-picker/src/index.js\";\nvar DatePicker = _reactNative.Platform.select({\n  android: _DatePickerAndroid.default,\n  ios: _DatePickerIOS.default\n});\nDatePicker.propTypes = _propTypes.default;\nvar DatePickerWrapper = function DatePickerWrapper(props) {\n  if (__DEV__) (0, _propChecker.throwIfInvalidProps)(props);\n  return (0, _jsxRuntime.jsx)(DatePicker, Object.assign({\n    ref: props.innerRef\n  }, props, {\n    textColor: (0, _colorToHex.colorToHex)(getTextColor(props)),\n    theme: getTheme(props),\n    fadeToColor: (0, _colorToHex.colorToHex)(props.fadeToColor),\n    title: getTitle(props),\n    confirmText: props.confirmText ? props.confirmText : 'Confirm',\n    cancelText: props.cancelText ? props.cancelText : 'Cancel',\n    androidVariant: getAndroidVariant(props),\n    minuteInterval: props.minuteInterval ? props.minuteInterval : 1,\n    mode: props.mode ? props.mode : 'datetime'\n  }));\n};\nvar getTheme = function getTheme(props) {\n  if (props.theme) return props.theme;\n  if (!_reactNative.Appearance) return 'auto';\n  return _reactNative.Appearance.getColorScheme();\n};\nvar getTextColor = function getTextColor(props) {\n  if (props.textColor) return props.textColor;\n  var darkTheme = getTheme(props) === 'dark';\n  if (darkTheme) return 'white';\n  return undefined;\n};\nvar getAndroidVariant = function getAndroidVariant(props) {\n  var modal = props.modal,\n    androidVariant = props.androidVariant;\n  if (androidVariant) return androidVariant;\n  return modal ? 'nativeAndroid' : 'iosClone';\n};\nvar getTitle = function getTitle(props) {\n  var title = props.title,\n    mode = props.mode;\n  if (title === null) return '';\n  if (title) return title;\n  if (mode === 'time') return 'Select time';\n  return 'Select date';\n};\nvar _default = _react.default.memo(DatePickerWrapper);\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_DatePickerIOS","_DatePickerAndroid","_propTypes","_colorToHex","_propChecker","_jsxRuntime","_this","_jsxFileName","DatePicker","Platform","select","android","DatePickerAndroid","ios","DatePickerIOS","propTypes","DatePickerWrapper","props","__DEV__","throwIfInvalidProps","jsx","Object","assign","ref","innerRef","textColor","colorToHex","getTextColor","theme","getTheme","fadeToColor","title","getTitle","confirmText","cancelText","androidVariant","getAndroidVariant","minuteInterval","mode","Appearance","getColorScheme","darkTheme","undefined","modal","_default","React","memo","exports","default"],"sources":["/Users/topremitdevice/Documents/alfi/portofolio/Permohonan-IMB-Mobile/node_modules/react-native-date-picker/src/index.js"],"sourcesContent":["import React from 'react'\nimport { Platform, Appearance } from 'react-native'\nimport DatePickerIOS from './DatePickerIOS'\nimport DatePickerAndroid from './DatePickerAndroid'\nimport propTypes from './propTypes'\nimport { colorToHex } from './colorToHex'\nimport { throwIfInvalidProps } from './propChecker'\n\nconst DatePicker = Platform.select({\n  android: DatePickerAndroid,\n  ios: DatePickerIOS,\n})\n\nDatePicker.propTypes = propTypes\n\nconst DatePickerWrapper = (props) => {\n  if (__DEV__) throwIfInvalidProps(props)\n  return (\n    <DatePicker\n      ref={props.innerRef}\n      {...props}\n      textColor={colorToHex(getTextColor(props))}\n      theme={getTheme(props)}\n      fadeToColor={colorToHex(props.fadeToColor)}\n      title={getTitle(props)}\n      confirmText={props.confirmText ? props.confirmText : 'Confirm'}\n      cancelText={props.cancelText ? props.cancelText : 'Cancel'}\n      androidVariant={getAndroidVariant(props)}\n      minuteInterval={props.minuteInterval ? props.minuteInterval : 1}\n      mode={props.mode ? props.mode : 'datetime'}\n    />\n  )\n}\n\nconst getTheme = (props) => {\n  if (props.theme) return props.theme\n  if (!Appearance) return 'auto'\n  return Appearance.getColorScheme()\n}\n\nconst getTextColor = (props) => {\n  if (props.textColor) return props.textColor\n  const darkTheme = getTheme(props) === 'dark'\n  if (darkTheme) return 'white'\n  return undefined\n}\n\nconst getAndroidVariant = (props) => {\n  const { modal, androidVariant } = props\n  if (androidVariant) return androidVariant\n  return modal ? 'nativeAndroid' : 'iosClone'\n}\n\nconst getTitle = (props) => {\n  const { title, mode } = props\n  if (title === null) return ''\n  if (title) return title\n  if (mode === 'time') return 'Select time'\n  return 'Select date'\n}\n\nexport default React.memo(DatePickerWrapper)\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,kBAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,UAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,WAAA,GAAAL,OAAA;AACA,IAAAM,YAAA,GAAAN,OAAA;AAAmD,IAAAO,WAAA,GAAAP,OAAA;AAAA,IAAAQ,KAAA;EAAAC,YAAA;AAEnD,IAAMC,UAAU,GAAGC,qBAAQ,CAACC,MAAM,CAAC;EACjCC,OAAO,EAAEC,0BAAiB;EAC1BC,GAAG,EAAEC;AACP,CAAC,CAAC;AAEFN,UAAU,CAACO,SAAS,GAAGA,kBAAS;AAEhC,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAK,EAAK;EACnC,IAAIC,OAAO,EAAE,IAAAC,gCAAmB,EAACF,KAAK,CAAC;EACvC,OACE,IAAAZ,WAAA,CAAAe,GAAA,EAACZ,UAAU,EAAAa,MAAA,CAAAC,MAAA;IACTC,GAAG,EAAEN,KAAK,CAACO;EAAS,GAChBP,KAAK;IACTQ,SAAS,EAAE,IAAAC,sBAAU,EAACC,YAAY,CAACV,KAAK,CAAC,CAAE;IAC3CW,KAAK,EAAEC,QAAQ,CAACZ,KAAK,CAAE;IACvBa,WAAW,EAAE,IAAAJ,sBAAU,EAACT,KAAK,CAACa,WAAW,CAAE;IAC3CC,KAAK,EAAEC,QAAQ,CAACf,KAAK,CAAE;IACvBgB,WAAW,EAAEhB,KAAK,CAACgB,WAAW,GAAGhB,KAAK,CAACgB,WAAW,GAAG,SAAU;IAC/DC,UAAU,EAAEjB,KAAK,CAACiB,UAAU,GAAGjB,KAAK,CAACiB,UAAU,GAAG,QAAS;IAC3DC,cAAc,EAAEC,iBAAiB,CAACnB,KAAK,CAAE;IACzCoB,cAAc,EAAEpB,KAAK,CAACoB,cAAc,GAAGpB,KAAK,CAACoB,cAAc,GAAG,CAAE;IAChEC,IAAI,EAAErB,KAAK,CAACqB,IAAI,GAAGrB,KAAK,CAACqB,IAAI,GAAG;EAAW,EAC5C,CAAC;AAEN,CAAC;AAED,IAAMT,QAAQ,GAAG,SAAXA,QAAQA,CAAIZ,KAAK,EAAK;EAC1B,IAAIA,KAAK,CAACW,KAAK,EAAE,OAAOX,KAAK,CAACW,KAAK;EACnC,IAAI,CAACW,uBAAU,EAAE,OAAO,MAAM;EAC9B,OAAOA,uBAAU,CAACC,cAAc,CAAC,CAAC;AACpC,CAAC;AAED,IAAMb,YAAY,GAAG,SAAfA,YAAYA,CAAIV,KAAK,EAAK;EAC9B,IAAIA,KAAK,CAACQ,SAAS,EAAE,OAAOR,KAAK,CAACQ,SAAS;EAC3C,IAAMgB,SAAS,GAAGZ,QAAQ,CAACZ,KAAK,CAAC,KAAK,MAAM;EAC5C,IAAIwB,SAAS,EAAE,OAAO,OAAO;EAC7B,OAAOC,SAAS;AAClB,CAAC;AAED,IAAMN,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAInB,KAAK,EAAK;EACnC,IAAQ0B,KAAK,GAAqB1B,KAAK,CAA/B0B,KAAK;IAAER,cAAc,GAAKlB,KAAK,CAAxBkB,cAAc;EAC7B,IAAIA,cAAc,EAAE,OAAOA,cAAc;EACzC,OAAOQ,KAAK,GAAG,eAAe,GAAG,UAAU;AAC7C,CAAC;AAED,IAAMX,QAAQ,GAAG,SAAXA,QAAQA,CAAIf,KAAK,EAAK;EAC1B,IAAQc,KAAK,GAAWd,KAAK,CAArBc,KAAK;IAAEO,IAAI,GAAKrB,KAAK,CAAdqB,IAAI;EACnB,IAAIP,KAAK,KAAK,IAAI,EAAE,OAAO,EAAE;EAC7B,IAAIA,KAAK,EAAE,OAAOA,KAAK;EACvB,IAAIO,IAAI,KAAK,MAAM,EAAE,OAAO,aAAa;EACzC,OAAO,aAAa;AACtB,CAAC;AAAA,IAAAM,QAAA,GAEcC,cAAK,CAACC,IAAI,CAAC9B,iBAAiB,CAAC;AAAA+B,OAAA,CAAAC,OAAA,GAAAJ,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}