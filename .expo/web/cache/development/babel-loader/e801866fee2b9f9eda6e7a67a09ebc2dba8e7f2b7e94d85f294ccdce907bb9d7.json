{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\nvar _native = require(\"@react-navigation/native\");\nvar _stack = require(\"@react-navigation/stack\");\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome5\"));\nvar _reactRedux = require(\"react-redux\");\nvar _components = require(\"../global/components\");\nvar _styles = _interopRequireWildcard(require(\"../global/styles\"));\nvar _utils = require(\"../helper/utils\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"/Users/topremitdevice/Documents/alfi/portofolio/Permohonan-IMB-Mobile/src/router/index.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar Stack = (0, _stack.createStackNavigator)();\nvar Tab = (0, _bottomTabs.createBottomTabNavigator)();\nvar path = '../screens/';\nvar SCREEN = {\n  Auth: {\n    Login: {\n      path: require(path + \"Auth/Login\")\n    },\n    Register: {\n      path: require(path + \"Auth/Register\")\n    }\n  },\n  SplashScreen: {\n    SplashScreen: {\n      path: require(path + \"SplashScreen\")\n    }\n  },\n  App: {\n    Home: {\n      path: require(path + \"Home\")\n    },\n    MyLapor: {\n      path: require(path + \"MyLapor\")\n    },\n    Persetujuan: {\n      path: require(path + \"Persetujuan\")\n    },\n    CetakLaporan: {\n      path: require(path + \"CetakLaporan\")\n    },\n    Notification: {\n      path: require(path + \"Notification\")\n    },\n    ProfileList: {\n      path: require(path + \"Profile/List\")\n    },\n    ProfileAdd: {\n      path: require(path + \"Profile/Add\")\n    },\n    ProfileEdit: {\n      path: require(path + \"Profile/Edit\")\n    },\n    ProfileDetail: {\n      path: require(path + \"Profile/Detail\")\n    },\n    ProfileChangePassword: {\n      path: require(path + \"Profile/ChangePassword\")\n    },\n    ReportDetail: {\n      path: require(path + \"ReportDetail\")\n    }\n  },\n  Tab: {\n    Home: {\n      path: require(path + \"Home\"),\n      label: 'Beranda',\n      icon: 'home'\n    },\n    MyLapor: {\n      path: require(path + \"MyLapor\"),\n      label: 'Permohonanku',\n      icon: 'book'\n    },\n    Persetujuan: {\n      path: require(path + \"Persetujuan\"),\n      label: 'Persetujuan',\n      icon: 'book'\n    },\n    CetakLaporan: {\n      path: require(path + \"CetakLaporan\"),\n      label: 'CetakLaporan',\n      icon: 'print'\n    },\n    Lapor: {\n      path: require(path + \"Lapor\"),\n      label: 'Permohonan',\n      icon: 'plus-circle'\n    },\n    Notification: {\n      path: require(path + \"Notification\"),\n      label: 'Notifikasi',\n      icon: 'bell'\n    },\n    Profile: {\n      path: require(path + \"Profile\"),\n      label: 'Pengaturan',\n      icon: 'cog'\n    }\n  }\n};\nvar TabNavigator = function TabNavigator() {\n  var tipe = (0, _reactRedux.useSelector)(function (s) {\n    return s.login.tipe;\n  });\n  console.log(tipe);\n  var SCREENTAB = {\n    Auth: {\n      Login: {\n        path: require(path + \"Auth/Login\")\n      },\n      Register: {\n        path: require(path + \"Auth/Register\")\n      }\n    },\n    SplashScreen: {\n      SplashScreen: {\n        path: require(path + \"SplashScreen\")\n      }\n    },\n    App: {\n      Home: {\n        path: require(path + \"Home\")\n      },\n      Persetujuan: {\n        path: require(path + \"Persetujuan\")\n      },\n      Notification: {\n        path: require(path + \"Notification\")\n      },\n      ProfileList: {\n        path: require(path + \"Profile/List\")\n      },\n      ProfileAdd: {\n        path: require(path + \"Profile/Add\")\n      },\n      ProfileEdit: {\n        path: require(path + \"Profile/Edit\")\n      },\n      ProfileDetail: {\n        path: require(path + \"Profile/Detail\")\n      },\n      ProfileChangePassword: {\n        path: require(path + \"Profile/ChangePassword\")\n      },\n      ReportDetail: {\n        path: require(path + \"ReportDetail\")\n      }\n    },\n    Tab: {\n      Home: {\n        path: require(path + \"Home\"),\n        label: 'Beranda',\n        icon: 'home'\n      },\n      Persetujuan: {\n        path: require(path + \"Persetujuan\"),\n        label: 'Persetujuan',\n        icon: 'book'\n      },\n      Notification: {\n        path: require(path + \"Notification\"),\n        label: 'Notifikasi',\n        icon: 'bell'\n      },\n      Profile: {\n        path: require(path + \"Profile\"),\n        label: 'Pengaturan',\n        icon: 'cog'\n      }\n    }\n  };\n  if (tipe == 'kabid') {\n    SCREENTAB = {\n      Auth: {\n        Login: {\n          path: require(path + \"Auth/Login\")\n        },\n        Register: {\n          path: require(path + \"Auth/Register\")\n        }\n      },\n      SplashScreen: {\n        SplashScreen: {\n          path: require(path + \"SplashScreen\")\n        }\n      },\n      App: {\n        Home: {\n          path: require(path + \"Home\")\n        },\n        Persetujuan: {\n          path: require(path + \"Persetujuan\")\n        },\n        Notification: {\n          path: require(path + \"Notification\")\n        },\n        ProfileList: {\n          path: require(path + \"Profile/List\")\n        },\n        ProfileAdd: {\n          path: require(path + \"Profile/Add\")\n        },\n        ProfileEdit: {\n          path: require(path + \"Profile/Edit\")\n        },\n        ProfileDetail: {\n          path: require(path + \"Profile/Detail\")\n        },\n        ProfileChangePassword: {\n          path: require(path + \"Profile/ChangePassword\")\n        },\n        ReportDetail: {\n          path: require(path + \"ReportDetail\")\n        }\n      },\n      Tab: {\n        Home: {\n          path: require(path + \"Home\"),\n          label: 'Beranda',\n          icon: 'home'\n        },\n        Persetujuan: {\n          path: require(path + \"Persetujuan\"),\n          label: 'Persetujuan',\n          icon: 'book'\n        },\n        Notification: {\n          path: require(path + \"Notification\"),\n          label: 'Notifikasi',\n          icon: 'bell'\n        },\n        Profile: {\n          path: require(path + \"Profile\"),\n          label: 'Pengaturan',\n          icon: 'cog'\n        }\n      }\n    };\n  }\n  if (tipe == 'staff') {\n    SCREENTAB = {\n      Auth: {\n        Login: {\n          path: require(path + \"Auth/Login\")\n        },\n        Register: {\n          path: require(path + \"Auth/Register\")\n        }\n      },\n      SplashScreen: {\n        SplashScreen: {\n          path: require(path + \"SplashScreen\")\n        }\n      },\n      App: {\n        Home: {\n          path: require(path + \"Home\")\n        },\n        Persetujuan: {\n          path: require(path + \"Persetujuan\")\n        },\n        CetakLaporan: {\n          path: require(path + \"CetakLaporan\")\n        },\n        Notification: {\n          path: require(path + \"Notification\")\n        },\n        ProfileList: {\n          path: require(path + \"Profile/List\")\n        },\n        ProfileAdd: {\n          path: require(path + \"Profile/Add\")\n        },\n        ProfileEdit: {\n          path: require(path + \"Profile/Edit\")\n        },\n        ProfileDetail: {\n          path: require(path + \"Profile/Detail\")\n        },\n        ProfileChangePassword: {\n          path: require(path + \"Profile/ChangePassword\")\n        },\n        ReportDetail: {\n          path: require(path + \"ReportDetail\")\n        }\n      },\n      Tab: {\n        Home: {\n          path: require(path + \"Home\"),\n          label: 'Beranda',\n          icon: 'home'\n        },\n        Persetujuan: {\n          path: require(path + \"Persetujuan\"),\n          label: 'Persetujuan',\n          icon: 'book'\n        },\n        CetakLaporan: {\n          path: require(path + \"CetakLaporan\"),\n          label: 'CetakLaporan',\n          icon: 'print'\n        },\n        Notification: {\n          path: require(path + \"Notification\"),\n          label: 'Notifikasi',\n          icon: 'bell'\n        },\n        Profile: {\n          path: require(path + \"Profile\"),\n          label: 'Pengaturan',\n          icon: 'cog'\n        }\n      }\n    };\n  }\n  if (tipe == 'pemohon') {\n    SCREENTAB = {\n      Auth: {\n        Login: {\n          path: require(path + \"Auth/Login\")\n        },\n        Register: {\n          path: require(path + \"Auth/Register\")\n        }\n      },\n      SplashScreen: {\n        SplashScreen: {\n          path: require(path + \"SplashScreen\")\n        }\n      },\n      App: {\n        Home: {\n          path: require(path + \"Home\")\n        },\n        MyLapor: {\n          path: require(path + \"MyLapor\")\n        },\n        Notification: {\n          path: require(path + \"Notification\")\n        },\n        ProfileList: {\n          path: require(path + \"Profile/List\")\n        },\n        ProfileAdd: {\n          path: require(path + \"Profile/Add\")\n        },\n        ProfileEdit: {\n          path: require(path + \"Profile/Edit\")\n        },\n        ProfileDetail: {\n          path: require(path + \"Profile/Detail\")\n        },\n        ProfileChangePassword: {\n          path: require(path + \"Profile/ChangePassword\")\n        },\n        ReportDetail: {\n          path: require(path + \"ReportDetail\")\n        }\n      },\n      Tab: {\n        Home: {\n          path: require(path + \"Home\"),\n          label: 'Beranda',\n          icon: 'home'\n        },\n        MyLapor: {\n          path: require(path + \"MyLapor\"),\n          label: 'Permohonanku',\n          icon: 'book'\n        },\n        Lapor: {\n          path: require(path + \"Lapor\"),\n          label: 'Permohonan',\n          icon: 'plus-circle'\n        },\n        Notification: {\n          path: require(path + \"Notification\"),\n          label: 'Notifikasi',\n          icon: 'bell'\n        },\n        Profile: {\n          path: require(path + \"Profile\"),\n          label: 'Pengaturan',\n          icon: 'cog'\n        }\n      }\n    };\n  }\n  return (0, _jsxRuntime.jsx)(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true\n    },\n    tabBar: function tabBar(props) {\n      return (0, _jsxRuntime.jsx)(TabOptions, Object.assign({}, props));\n    },\n    children: Object.keys(SCREENTAB.Tab).map(function (key, i) {\n      return (0, _jsxRuntime.jsx)(Tab.Screen, {\n        name: key,\n        component: SCREENTAB.Tab[key].path.default\n      }, i);\n    })\n  });\n};\nvar TabOptions = function TabOptions(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors,\n    navigation = _ref.navigation;\n  var routes = state == null ? void 0 : state.routes;\n  var renderItems = function renderItems(route, index) {\n    var isFocused = state.index === index;\n    var icon = SCREEN.Tab[route == null ? void 0 : route.name].icon;\n    var name = SCREEN.Tab[route == null ? void 0 : route.name].label;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n    return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      onPress: onPress,\n      style: [_styles.default.flex, _styles.default.pt_1],\n      children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: [_styles.default.p_1, _styles.default.itemsCenter],\n        children: [(0, _jsxRuntime.jsx)(_FontAwesome.default, {\n          name: icon,\n          size: 20,\n          color: isFocused ? _styles.COLORS.primaryDark : _styles.COLORS.greyDark,\n          solid: true\n        }), (0, _jsxRuntime.jsx)(_components.Text, {\n          size: 12,\n          font: \"secondary\",\n          weight: \"normal\",\n          color: isFocused ? _styles.COLORS.primaryDark : _styles.COLORS.greyDark,\n          align: \"center\",\n          style: _styles.default.mt_1,\n          children: name\n        })]\n      })\n    }, index);\n  };\n  return (0, _jsxRuntime.jsx)(_reactNative.SafeAreaView, {\n    style: [_styles.default.row, _styles.default.bgColor('white'), _styles.default.shadowSmooth],\n    children: Array.isArray(routes) && routes.map(renderItems)\n  });\n};\nvar Router = function Router() {\n  var _useSelector = (0, _reactRedux.useSelector)(function (s) {\n      return s.login;\n    }),\n    _useSelector$loading = _useSelector.loading,\n    loading = _useSelector$loading === void 0 ? false : _useSelector$loading,\n    _useSelector$token = _useSelector.token,\n    token = _useSelector$token === void 0 ? null : _useSelector$token;\n  var isLogin = !(0, _utils.isEmpty)(token);\n  var screen = SCREEN[loading ? 'SplashScreen' : isLogin ? 'App' : 'Auth'];\n  var initialScreen = loading ? 'SplashScreen' : isLogin ? 'Home' : 'Login';\n  return (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n    children: (0, _jsxRuntime.jsx)(_native.NavigationContainer, {\n      children: (0, _jsxRuntime.jsxs)(Stack.Navigator, {\n        initialRouteName: initialScreen,\n        options: {\n          headerShown: false\n        },\n        screenOptions: {\n          headerShown: false,\n          gestureEnabled: true\n        },\n        children: [isLogin && (0, _jsxRuntime.jsx)(Stack.Screen, {\n          name: \"Tabs\",\n          component: TabNavigator\n        }), Object.keys(screen).map(function (key, i) {\n          return (0, _jsxRuntime.jsx)(Stack.Screen, {\n            name: key,\n            component: screen[key].path.default,\n            options: screen[key].options\n          }, i);\n        })]\n      })\n    })\n  });\n};\nvar _default = Router;\nexports.default = _default;","map":{"version":3,"names":["_bottomTabs","require","_native","_stack","_react","_interopRequireDefault","_reactNative","_FontAwesome","_reactRedux","_components","_styles","_interopRequireWildcard","_utils","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Stack","createStackNavigator","Tab","createBottomTabNavigator","path","SCREEN","Auth","Login","Register","SplashScreen","App","Home","MyLapor","Persetujuan","CetakLaporan","Notification","ProfileList","ProfileAdd","ProfileEdit","ProfileDetail","ProfileChangePassword","ReportDetail","label","icon","Lapor","Profile","TabNavigator","tipe","useSelector","s","login","console","log","SCREENTAB","jsx","Navigator","initialRouteName","screenOptions","headerShown","gestureEnabled","tabBar","props","TabOptions","assign","children","keys","map","i","Screen","name","component","_ref","state","descriptors","navigation","routes","renderItems","route","index","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","TouchableOpacity","style","_","flex","pt_1","jsxs","View","p_1","itemsCenter","size","color","COLORS","primaryDark","greyDark","solid","Text","font","weight","align","mt_1","SafeAreaView","row","bgColor","shadowSmooth","Array","isArray","Router","_useSelector","_useSelector$loading","loading","_useSelector$token","token","isLogin","isEmpty","screen","initialScreen","Fragment","NavigationContainer","options","_default","exports"],"sources":["/Users/topremitdevice/Documents/alfi/portofolio/Permohonan-IMB-Mobile/src/router/index.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React from 'react';\nimport { SafeAreaView, TouchableOpacity, View } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\nimport { useSelector } from 'react-redux';\nimport { Text } from '../global/components';\nimport _, { COLORS } from '../global/styles';\nimport { isEmpty } from '../helper/utils';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst path = '../screens/';\n\nlet SCREEN = {\n  Auth: {\n    Login: {\n      path: require(`${path}Auth/Login`),\n    },\n    Register: {\n      path: require(`${path}Auth/Register`),\n    },\n  },\n  SplashScreen: {\n    SplashScreen: {\n      path: require(`${path}SplashScreen`),\n    },\n  },\n  App: {\n    Home: {\n      path: require(`${path}Home`),\n    },\n    MyLapor: {\n      path: require(`${path}MyLapor`),\n    },\n    Persetujuan: {\n      path: require(`${path}Persetujuan`),\n    },\n    CetakLaporan: {\n      path: require(`${path}CetakLaporan`),\n    },\n    Notification: {\n      path: require(`${path}Notification`),\n    },\n    ProfileList: {\n      path: require(`${path}Profile/List`),\n    },\n    ProfileAdd: {\n      path: require(`${path}Profile/Add`),\n    },\n    ProfileEdit: {\n      path: require(`${path}Profile/Edit`),\n    },\n    ProfileDetail: {\n      path: require(`${path}Profile/Detail`),\n    },\n    ProfileChangePassword: {\n      path: require(`${path}Profile/ChangePassword`),\n    },\n    ReportDetail: {\n      path: require(`${path}ReportDetail`),\n    },\n  },\n  Tab: {\n    Home: {\n      path: require(`${path}Home`),\n      label: 'Beranda',\n      icon: 'home',\n    },\n    MyLapor: {\n      path: require(`${path}MyLapor`),\n      label: 'Permohonanku',\n      icon: 'book',\n    },\n    Persetujuan: {\n      path: require(`${path}Persetujuan`),\n      label: 'Persetujuan',\n      icon: 'book',\n    },\n    CetakLaporan: {\n      path: require(`${path}CetakLaporan`),\n      label: 'CetakLaporan',\n      icon: 'print',\n    },\n    Lapor: {\n      path: require(`${path}Lapor`),\n      label: 'Permohonan',\n      icon: 'plus-circle',\n    },\n    Notification: {\n      path: require(`${path}Notification`),\n      label: 'Notifikasi',\n      icon: 'bell',\n    },\n    Profile: {\n      path: require(`${path}Profile`),\n      label: 'Pengaturan',\n      icon: 'cog',\n    },\n  },\n};\n\nconst TabNavigator = () => {\n  const tipe = useSelector(s => s.login.tipe);\n  console.log(tipe)\n  \n  let SCREENTAB = {\n    Auth: {\n      Login: {\n        path: require(`${path}Auth/Login`),\n      },\n      Register: {\n        path: require(`${path}Auth/Register`),\n      },\n    },\n    SplashScreen: {\n      SplashScreen: {\n        path: require(`${path}SplashScreen`),\n      },\n    },\n    App: {\n      Home: {\n        path: require(`${path}Home`),\n      },\n      Persetujuan: {\n        path: require(`${path}Persetujuan`),\n      },\n      Notification: {\n        path: require(`${path}Notification`),\n      },\n      ProfileList: {\n        path: require(`${path}Profile/List`),\n      },\n      ProfileAdd: {\n        path: require(`${path}Profile/Add`),\n      },\n      ProfileEdit: {\n        path: require(`${path}Profile/Edit`),\n      },\n      ProfileDetail: {\n        path: require(`${path}Profile/Detail`),\n      },\n      ProfileChangePassword: {\n        path: require(`${path}Profile/ChangePassword`),\n      },\n      ReportDetail: {\n        path: require(`${path}ReportDetail`),\n      },\n    },\n    Tab: {\n      Home: {\n        path: require(`${path}Home`),\n        label: 'Beranda',\n        icon: 'home',\n      },\n      Persetujuan: {\n        path: require(`${path}Persetujuan`),\n        label: 'Persetujuan',\n        icon: 'book',\n      },\n      Notification: {\n        path: require(`${path}Notification`),\n        label: 'Notifikasi',\n        icon: 'bell',\n      },\n      Profile: {\n        path: require(`${path}Profile`),\n        label: 'Pengaturan',\n        icon: 'cog',\n      },\n    },\n  };\n\n  if (tipe == 'kabid') {\n    SCREENTAB = {\n      Auth: {\n        Login: {\n          path: require(`${path}Auth/Login`),\n        },\n        Register: {\n          path: require(`${path}Auth/Register`),\n        },\n      },\n      SplashScreen: {\n        SplashScreen: {\n          path: require(`${path}SplashScreen`),\n        },\n      },\n      App: {\n        Home: {\n          path: require(`${path}Home`),\n        },\n        Persetujuan: {\n          path: require(`${path}Persetujuan`),\n        },\n        Notification: {\n          path: require(`${path}Notification`),\n        },\n        ProfileList: {\n          path: require(`${path}Profile/List`),\n        },\n        ProfileAdd: {\n          path: require(`${path}Profile/Add`),\n        },\n        ProfileEdit: {\n          path: require(`${path}Profile/Edit`),\n        },\n        ProfileDetail: {\n          path: require(`${path}Profile/Detail`),\n        },\n        ProfileChangePassword: {\n          path: require(`${path}Profile/ChangePassword`),\n        },\n        ReportDetail: {\n          path: require(`${path}ReportDetail`),\n        },\n      },\n      Tab: {\n        Home: {\n          path: require(`${path}Home`),\n          label: 'Beranda',\n          icon: 'home',\n        },\n        Persetujuan: {\n          path: require(`${path}Persetujuan`),\n          label: 'Persetujuan',\n          icon: 'book',\n        },\n        Notification: {\n          path: require(`${path}Notification`),\n          label: 'Notifikasi',\n          icon: 'bell',\n        },\n        Profile: {\n          path: require(`${path}Profile`),\n          label: 'Pengaturan',\n          icon: 'cog',\n        },\n      },\n    };\n  }\n  if (tipe == 'staff') {\n    SCREENTAB = {\n      Auth: {\n        Login: {\n          path: require(`${path}Auth/Login`),\n        },\n        Register: {\n          path: require(`${path}Auth/Register`),\n        },\n      },\n      SplashScreen: {\n        SplashScreen: {\n          path: require(`${path}SplashScreen`),\n        },\n      },\n      App: {\n        Home: {\n          path: require(`${path}Home`),\n        },\n        Persetujuan: {\n          path: require(`${path}Persetujuan`),\n        },\n        CetakLaporan: {\n          path: require(`${path}CetakLaporan`),\n        },\n        Notification: {\n          path: require(`${path}Notification`),\n        },\n        ProfileList: {\n          path: require(`${path}Profile/List`),\n        },\n        ProfileAdd: {\n          path: require(`${path}Profile/Add`),\n        },\n        ProfileEdit: {\n          path: require(`${path}Profile/Edit`),\n        },\n        ProfileDetail: {\n          path: require(`${path}Profile/Detail`),\n        },\n        ProfileChangePassword: {\n          path: require(`${path}Profile/ChangePassword`),\n        },\n        ReportDetail: {\n          path: require(`${path}ReportDetail`),\n        },\n      },\n      Tab: {\n        Home: {\n          path: require(`${path}Home`),\n          label: 'Beranda',\n          icon: 'home',\n        },\n        Persetujuan: {\n          path: require(`${path}Persetujuan`),\n          label: 'Persetujuan',\n          icon: 'book',\n        },\n        CetakLaporan: {\n          path: require(`${path}CetakLaporan`),\n          label: 'CetakLaporan',\n          icon: 'print',\n        },\n        Notification: {\n          path: require(`${path}Notification`),\n          label: 'Notifikasi',\n          icon: 'bell',\n        },\n        Profile: {\n          path: require(`${path}Profile`),\n          label: 'Pengaturan',\n          icon: 'cog',\n        },\n      },\n    };\n  }\n  if (tipe == 'pemohon') {\n    SCREENTAB = {\n      Auth: {\n        Login: {\n          path: require(`${path}Auth/Login`),\n        },\n        Register: {\n          path: require(`${path}Auth/Register`),\n        },\n      },\n      SplashScreen: {\n        SplashScreen: {\n          path: require(`${path}SplashScreen`),\n        },\n      },\n      App: {\n        Home: {\n          path: require(`${path}Home`),\n        },\n        MyLapor: {\n          path: require(`${path}MyLapor`),\n        },\n        Notification: {\n          path: require(`${path}Notification`),\n        },\n        ProfileList: {\n          path: require(`${path}Profile/List`),\n        },\n        ProfileAdd: {\n          path: require(`${path}Profile/Add`),\n        },\n        ProfileEdit: {\n          path: require(`${path}Profile/Edit`),\n        },\n        ProfileDetail: {\n          path: require(`${path}Profile/Detail`),\n        },\n        ProfileChangePassword: {\n          path: require(`${path}Profile/ChangePassword`),\n        },\n        ReportDetail: {\n          path: require(`${path}ReportDetail`),\n        },\n      },\n      Tab: {\n        Home: {\n          path: require(`${path}Home`),\n          label: 'Beranda',\n          icon: 'home',\n        },\n        MyLapor: {\n          path: require(`${path}MyLapor`),\n          label: 'Permohonanku',\n          icon: 'book',\n        },\n        Lapor: {\n          path: require(`${path}Lapor`),\n          label: 'Permohonan',\n          icon: 'plus-circle',\n        },\n        Notification: {\n          path: require(`${path}Notification`),\n          label: 'Notifikasi',\n          icon: 'bell',\n        },\n        Profile: {\n          path: require(`${path}Profile`),\n          label: 'Pengaturan',\n          icon: 'cog',\n        },\n      },\n    };\n  }\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Home\"\n      screenOptions={{\n        headerShown: false,\n        gestureEnabled: true,\n      }}\n      tabBar={props => <TabOptions {...props} />}>\n      {Object.keys(SCREENTAB.Tab).map((key, i) => (\n        <Tab.Screen\n          key={i}\n          name={key}\n          component={SCREENTAB.Tab[key].path.default}\n        />\n      ))}\n    </Tab.Navigator>\n  );\n};\n\nconst TabOptions = ({state, descriptors, navigation}) => {\n  const routes = state?.routes;\n\n  const renderItems = (route, index) => {\n    const isFocused = state.index === index;\n    const icon = SCREEN.Tab[route?.name].icon;\n    const name = SCREEN.Tab[route?.name].label;\n    const onPress = () => {\n      const event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true,\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    return (\n      <TouchableOpacity onPress={onPress} key={index} style={[_.flex, _.pt_1]}>\n        <View style={[_.p_1, _.itemsCenter]}>\n          <Icon\n            name={icon}\n            size={20}\n            color={isFocused ? COLORS.primaryDark : COLORS.greyDark}\n            solid\n          />\n          <Text\n            size={12}\n            font=\"secondary\"\n            weight=\"normal\"\n            color={isFocused ? COLORS.primaryDark : COLORS.greyDark}\n            align=\"center\"\n            style={_.mt_1}>\n            {name}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <SafeAreaView style={[_.row, _.bgColor('white'), _.shadowSmooth]}>\n      {Array.isArray(routes) && routes.map(renderItems)}\n    </SafeAreaView>\n  );\n};\n\nconst Router = () => {\n  const {loading = false, token = null} = useSelector(s => s.login);\n  const isLogin = !isEmpty(token);\n\n  const screen = SCREEN[loading ? 'SplashScreen' : isLogin ? 'App' : 'Auth'];\n  const initialScreen = loading ? 'SplashScreen' : isLogin ? 'Home' : 'Login';\n\n  return (\n    <>\n      <NavigationContainer>\n        <Stack.Navigator\n          initialRouteName={initialScreen}\n          options={{headerShown: false}}\n          screenOptions={{\n            headerShown: false,\n            gestureEnabled: true,\n          }}>\n          {isLogin && <Stack.Screen name=\"Tabs\" component={TabNavigator} />}\n          {Object.keys(screen).map((key, i) => (\n            <Stack.Screen\n              key={i}\n              name={key}\n              component={screen[key].path.default}\n              options={screen[key].options}\n            />\n          ))}\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n};\n\nexport default Router;\n"],"mappings":";;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAC,sBAAA,CAAAJ,OAAA;AACA,IAAAK,YAAA,GAAAL,OAAA;AACA,IAAAM,YAAA,GAAAF,sBAAA,CAAAJ,OAAA;AACA,IAAAO,WAAA,GAAAP,OAAA;AACA,IAAAQ,WAAA,GAAAR,OAAA;AACA,IAAAS,OAAA,GAAAC,uBAAA,CAAAV,OAAA;AACA,IAAAW,MAAA,GAAAX,OAAA;AAA0C,IAAAY,WAAA,GAAAZ,OAAA;AAAA,IAAAa,KAAA;EAAAC,YAAA;AAAA,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAN,wBAAAU,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAE1C,IAAMW,KAAK,GAAG,IAAAC,2BAAoB,EAAC,CAAC;AACpC,IAAMC,GAAG,GAAG,IAAAC,oCAAwB,EAAC,CAAC;AACtC,IAAMC,IAAI,GAAG,aAAa;AAE1B,IAAIC,MAAM,GAAG;EACXC,IAAI,EAAE;IACJC,KAAK,EAAE;MACLH,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,eAAY;IACnC,CAAC;IACDI,QAAQ,EAAE;MACRJ,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,kBAAe;IACtC;EACF,CAAC;EACDK,YAAY,EAAE;IACZA,YAAY,EAAE;MACZL,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;IACrC;EACF,CAAC;EACDM,GAAG,EAAE;IACHC,IAAI,EAAE;MACJP,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,SAAM;IAC7B,CAAC;IACDQ,OAAO,EAAE;MACPR,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,YAAS;IAChC,CAAC;IACDS,WAAW,EAAE;MACXT,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa;IACpC,CAAC;IACDU,YAAY,EAAE;MACZV,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;IACrC,CAAC;IACDW,YAAY,EAAE;MACZX,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;IACrC,CAAC;IACDY,WAAW,EAAE;MACXZ,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;IACrC,CAAC;IACDa,UAAU,EAAE;MACVb,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa;IACpC,CAAC;IACDc,WAAW,EAAE;MACXd,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;IACrC,CAAC;IACDe,aAAa,EAAE;MACbf,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,mBAAgB;IACvC,CAAC;IACDgB,qBAAqB,EAAE;MACrBhB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,2BAAwB;IAC/C,CAAC;IACDiB,YAAY,EAAE;MACZjB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;IACrC;EACF,CAAC;EACDF,GAAG,EAAE;IACHS,IAAI,EAAE;MACJP,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,SAAM,CAAC;MAC5BkB,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;IACR,CAAC;IACDX,OAAO,EAAE;MACPR,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,YAAS,CAAC;MAC/BkB,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE;IACR,CAAC;IACDV,WAAW,EAAE;MACXT,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa,CAAC;MACnCkB,KAAK,EAAE,aAAa;MACpBC,IAAI,EAAE;IACR,CAAC;IACDT,YAAY,EAAE;MACZV,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc,CAAC;MACpCkB,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLpB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,UAAO,CAAC;MAC7BkB,KAAK,EAAE,YAAY;MACnBC,IAAI,EAAE;IACR,CAAC;IACDR,YAAY,EAAE;MACZX,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc,CAAC;MACpCkB,KAAK,EAAE,YAAY;MACnBC,IAAI,EAAE;IACR,CAAC;IACDE,OAAO,EAAE;MACPrB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,YAAS,CAAC;MAC/BkB,KAAK,EAAE,YAAY;MACnBC,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAMC,IAAI,GAAG,IAAAC,uBAAW,EAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,KAAK,CAACH,IAAI;EAAA,EAAC;EAC3CI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EAEjB,IAAIM,SAAS,GAAG;IACd3B,IAAI,EAAE;MACJC,KAAK,EAAE;QACLH,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,eAAY;MACnC,CAAC;MACDI,QAAQ,EAAE;QACRJ,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,kBAAe;MACtC;IACF,CAAC;IACDK,YAAY,EAAE;MACZA,YAAY,EAAE;QACZL,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;MACrC;IACF,CAAC;IACDM,GAAG,EAAE;MACHC,IAAI,EAAE;QACJP,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,SAAM;MAC7B,CAAC;MACDS,WAAW,EAAE;QACXT,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa;MACpC,CAAC;MACDW,YAAY,EAAE;QACZX,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;MACrC,CAAC;MACDY,WAAW,EAAE;QACXZ,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;MACrC,CAAC;MACDa,UAAU,EAAE;QACVb,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa;MACpC,CAAC;MACDc,WAAW,EAAE;QACXd,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;MACrC,CAAC;MACDe,aAAa,EAAE;QACbf,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,mBAAgB;MACvC,CAAC;MACDgB,qBAAqB,EAAE;QACrBhB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,2BAAwB;MAC/C,CAAC;MACDiB,YAAY,EAAE;QACZjB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;MACrC;IACF,CAAC;IACDF,GAAG,EAAE;MACHS,IAAI,EAAE;QACJP,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,SAAM,CAAC;QAC5BkB,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE;MACR,CAAC;MACDV,WAAW,EAAE;QACXT,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa,CAAC;QACnCkB,KAAK,EAAE,aAAa;QACpBC,IAAI,EAAE;MACR,CAAC;MACDR,YAAY,EAAE;QACZX,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc,CAAC;QACpCkB,KAAK,EAAE,YAAY;QACnBC,IAAI,EAAE;MACR,CAAC;MACDE,OAAO,EAAE;QACPrB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,YAAS,CAAC;QAC/BkB,KAAK,EAAE,YAAY;QACnBC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,IAAII,IAAI,IAAI,OAAO,EAAE;IACnBM,SAAS,GAAG;MACV3B,IAAI,EAAE;QACJC,KAAK,EAAE;UACLH,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,eAAY;QACnC,CAAC;QACDI,QAAQ,EAAE;UACRJ,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,kBAAe;QACtC;MACF,CAAC;MACDK,YAAY,EAAE;QACZA,YAAY,EAAE;UACZL,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC;MACF,CAAC;MACDM,GAAG,EAAE;QACHC,IAAI,EAAE;UACJP,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,SAAM;QAC7B,CAAC;QACDS,WAAW,EAAE;UACXT,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa;QACpC,CAAC;QACDW,YAAY,EAAE;UACZX,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC,CAAC;QACDY,WAAW,EAAE;UACXZ,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC,CAAC;QACDa,UAAU,EAAE;UACVb,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa;QACpC,CAAC;QACDc,WAAW,EAAE;UACXd,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC,CAAC;QACDe,aAAa,EAAE;UACbf,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,mBAAgB;QACvC,CAAC;QACDgB,qBAAqB,EAAE;UACrBhB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,2BAAwB;QAC/C,CAAC;QACDiB,YAAY,EAAE;UACZjB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC;MACF,CAAC;MACDF,GAAG,EAAE;QACHS,IAAI,EAAE;UACJP,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,SAAM,CAAC;UAC5BkB,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE;QACR,CAAC;QACDV,WAAW,EAAE;UACXT,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa,CAAC;UACnCkB,KAAK,EAAE,aAAa;UACpBC,IAAI,EAAE;QACR,CAAC;QACDR,YAAY,EAAE;UACZX,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc,CAAC;UACpCkB,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE;QACR,CAAC;QACDE,OAAO,EAAE;UACPrB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,YAAS,CAAC;UAC/BkB,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE;QACR;MACF;IACF,CAAC;EACH;EACA,IAAII,IAAI,IAAI,OAAO,EAAE;IACnBM,SAAS,GAAG;MACV3B,IAAI,EAAE;QACJC,KAAK,EAAE;UACLH,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,eAAY;QACnC,CAAC;QACDI,QAAQ,EAAE;UACRJ,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,kBAAe;QACtC;MACF,CAAC;MACDK,YAAY,EAAE;QACZA,YAAY,EAAE;UACZL,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC;MACF,CAAC;MACDM,GAAG,EAAE;QACHC,IAAI,EAAE;UACJP,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,SAAM;QAC7B,CAAC;QACDS,WAAW,EAAE;UACXT,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa;QACpC,CAAC;QACDU,YAAY,EAAE;UACZV,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC,CAAC;QACDW,YAAY,EAAE;UACZX,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC,CAAC;QACDY,WAAW,EAAE;UACXZ,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC,CAAC;QACDa,UAAU,EAAE;UACVb,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa;QACpC,CAAC;QACDc,WAAW,EAAE;UACXd,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC,CAAC;QACDe,aAAa,EAAE;UACbf,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,mBAAgB;QACvC,CAAC;QACDgB,qBAAqB,EAAE;UACrBhB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,2BAAwB;QAC/C,CAAC;QACDiB,YAAY,EAAE;UACZjB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC;MACF,CAAC;MACDF,GAAG,EAAE;QACHS,IAAI,EAAE;UACJP,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,SAAM,CAAC;UAC5BkB,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE;QACR,CAAC;QACDV,WAAW,EAAE;UACXT,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa,CAAC;UACnCkB,KAAK,EAAE,aAAa;UACpBC,IAAI,EAAE;QACR,CAAC;QACDT,YAAY,EAAE;UACZV,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc,CAAC;UACpCkB,KAAK,EAAE,cAAc;UACrBC,IAAI,EAAE;QACR,CAAC;QACDR,YAAY,EAAE;UACZX,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc,CAAC;UACpCkB,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE;QACR,CAAC;QACDE,OAAO,EAAE;UACPrB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,YAAS,CAAC;UAC/BkB,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE;QACR;MACF;IACF,CAAC;EACH;EACA,IAAII,IAAI,IAAI,SAAS,EAAE;IACrBM,SAAS,GAAG;MACV3B,IAAI,EAAE;QACJC,KAAK,EAAE;UACLH,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,eAAY;QACnC,CAAC;QACDI,QAAQ,EAAE;UACRJ,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,kBAAe;QACtC;MACF,CAAC;MACDK,YAAY,EAAE;QACZA,YAAY,EAAE;UACZL,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC;MACF,CAAC;MACDM,GAAG,EAAE;QACHC,IAAI,EAAE;UACJP,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,SAAM;QAC7B,CAAC;QACDQ,OAAO,EAAE;UACPR,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,YAAS;QAChC,CAAC;QACDW,YAAY,EAAE;UACZX,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC,CAAC;QACDY,WAAW,EAAE;UACXZ,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC,CAAC;QACDa,UAAU,EAAE;UACVb,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,gBAAa;QACpC,CAAC;QACDc,WAAW,EAAE;UACXd,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC,CAAC;QACDe,aAAa,EAAE;UACbf,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,mBAAgB;QACvC,CAAC;QACDgB,qBAAqB,EAAE;UACrBhB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,2BAAwB;QAC/C,CAAC;QACDiB,YAAY,EAAE;UACZjB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc;QACrC;MACF,CAAC;MACDF,GAAG,EAAE;QACHS,IAAI,EAAE;UACJP,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,SAAM,CAAC;UAC5BkB,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE;QACR,CAAC;QACDX,OAAO,EAAE;UACPR,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,YAAS,CAAC;UAC/BkB,KAAK,EAAE,cAAc;UACrBC,IAAI,EAAE;QACR,CAAC;QACDC,KAAK,EAAE;UACLpB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,UAAO,CAAC;UAC7BkB,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE;QACR,CAAC;QACDR,YAAY,EAAE;UACZX,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,iBAAc,CAAC;UACpCkB,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE;QACR,CAAC;QACDE,OAAO,EAAE;UACPrB,IAAI,EAAEzC,OAAO,CAAIyC,IAAI,YAAS,CAAC;UAC/BkB,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE;QACR;MACF;IACF,CAAC;EACH;EAEA,OACE,IAAAhD,WAAA,CAAA2D,GAAA,EAAChC,GAAG,CAACiC,SAAS;IACZC,gBAAgB,EAAC,MAAM;IACvBC,aAAa,EAAE;MACbC,WAAW,EAAE,KAAK;MAClBC,cAAc,EAAE;IAClB,CAAE;IACFC,MAAM,EAAE,SAAAA,OAAAC,KAAK;MAAA,OAAI,IAAAlE,WAAA,CAAA2D,GAAA,EAACQ,UAAU,EAAAnD,MAAA,CAAAoD,MAAA,KAAKF,KAAK,CAAG,CAAC;IAAA,CAAC;IAAAG,QAAA,EAC1CrD,MAAM,CAACsD,IAAI,CAACZ,SAAS,CAAC/B,GAAG,CAAC,CAAC4C,GAAG,CAAC,UAACpD,GAAG,EAAEqD,CAAC;MAAA,OACrC,IAAAxE,WAAA,CAAA2D,GAAA,EAAChC,GAAG,CAAC8C,MAAM;QAETC,IAAI,EAAEvD,GAAI;QACVwD,SAAS,EAAEjB,SAAS,CAAC/B,GAAG,CAACR,GAAG,CAAC,CAACU,IAAI,CAACnB;MAAQ,GAFtC8D,CAGN,CAAC;IAAA,CACH;EAAC,CACW,CAAC;AAEpB,CAAC;AAED,IAAML,UAAU,GAAG,SAAbA,UAAUA,CAAAS,IAAA,EAAyC;EAAA,IAApCC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IAAEC,UAAU,GAAAH,IAAA,CAAVG,UAAU;EACjD,IAAMC,MAAM,GAAGH,KAAK,oBAALA,KAAK,CAAEG,MAAM;EAE5B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAEC,KAAK,EAAK;IACpC,IAAMC,SAAS,GAAGP,KAAK,CAACM,KAAK,KAAKA,KAAK;IACvC,IAAMnC,IAAI,GAAGlB,MAAM,CAACH,GAAG,CAACuD,KAAK,oBAALA,KAAK,CAAER,IAAI,CAAC,CAAC1B,IAAI;IACzC,IAAM0B,IAAI,GAAG5C,MAAM,CAACH,GAAG,CAACuD,KAAK,oBAALA,KAAK,CAAER,IAAI,CAAC,CAAC3B,KAAK;IAC1C,IAAMsC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;MACpB,IAAMC,KAAK,GAAGP,UAAU,CAACQ,IAAI,CAAC;QAC5BC,IAAI,EAAE,UAAU;QAChBC,MAAM,EAAEP,KAAK,CAAC/D,GAAG;QACjBuE,iBAAiB,EAAE;MACrB,CAAC,CAAC;MAEF,IAAI,CAACN,SAAS,IAAI,CAACE,KAAK,CAACK,gBAAgB,EAAE;QACzCZ,UAAU,CAACa,QAAQ,CAACV,KAAK,CAACR,IAAI,CAAC;MACjC;IACF,CAAC;IAED,OACE,IAAA1E,WAAA,CAAA2D,GAAA,EAAClE,YAAA,CAAAoG,gBAAgB;MAACR,OAAO,EAAEA,OAAQ;MAAaS,KAAK,EAAE,CAACC,eAAC,CAACC,IAAI,EAAED,eAAC,CAACE,IAAI,CAAE;MAAA5B,QAAA,EACtE,IAAArE,WAAA,CAAAkG,IAAA,EAACzG,YAAA,CAAA0G,IAAI;QAACL,KAAK,EAAE,CAACC,eAAC,CAACK,GAAG,EAAEL,eAAC,CAACM,WAAW,CAAE;QAAAhC,QAAA,GAClC,IAAArE,WAAA,CAAA2D,GAAA,EAACjE,YAAA,CAAAgB,OAAI;UACHgE,IAAI,EAAE1B,IAAK;UACXsD,IAAI,EAAE,EAAG;UACTC,KAAK,EAAEnB,SAAS,GAAGoB,cAAM,CAACC,WAAW,GAAGD,cAAM,CAACE,QAAS;UACxDC,KAAK;QAAA,CACN,CAAC,EACF,IAAA3G,WAAA,CAAA2D,GAAA,EAAC/D,WAAA,CAAAgH,IAAI;UACHN,IAAI,EAAE,EAAG;UACTO,IAAI,EAAC,WAAW;UAChBC,MAAM,EAAC,QAAQ;UACfP,KAAK,EAAEnB,SAAS,GAAGoB,cAAM,CAACC,WAAW,GAAGD,cAAM,CAACE,QAAS;UACxDK,KAAK,EAAC,QAAQ;UACdjB,KAAK,EAAEC,eAAC,CAACiB,IAAK;UAAA3C,QAAA,EACbK;QAAI,CACD,CAAC;MAAA,CACH;IAAC,GAjBgCS,KAkBvB,CAAC;EAEvB,CAAC;EAED,OACE,IAAAnF,WAAA,CAAA2D,GAAA,EAAClE,YAAA,CAAAwH,YAAY;IAACnB,KAAK,EAAE,CAACC,eAAC,CAACmB,GAAG,EAAEnB,eAAC,CAACoB,OAAO,CAAC,OAAO,CAAC,EAAEpB,eAAC,CAACqB,YAAY,CAAE;IAAA/C,QAAA,EAC9DgD,KAAK,CAACC,OAAO,CAACtC,MAAM,CAAC,IAAIA,MAAM,CAACT,GAAG,CAACU,WAAW;EAAC,CACrC,CAAC;AAEnB,CAAC;AAED,IAAMsC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACnB,IAAAC,YAAA,GAAwC,IAAAnE,uBAAW,EAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACC,KAAK;IAAA,EAAC;IAAAkE,oBAAA,GAAAD,YAAA,CAA1DE,OAAO;IAAPA,OAAO,GAAAD,oBAAA,cAAG,KAAK,GAAAA,oBAAA;IAAAE,kBAAA,GAAAH,YAAA,CAAEI,KAAK;IAALA,KAAK,GAAAD,kBAAA,cAAG,IAAI,GAAAA,kBAAA;EACpC,IAAME,OAAO,GAAG,CAAC,IAAAC,cAAO,EAACF,KAAK,CAAC;EAE/B,IAAMG,MAAM,GAAGjG,MAAM,CAAC4F,OAAO,GAAG,cAAc,GAAGG,OAAO,GAAG,KAAK,GAAG,MAAM,CAAC;EAC1E,IAAMG,aAAa,GAAGN,OAAO,GAAG,cAAc,GAAGG,OAAO,GAAG,MAAM,GAAG,OAAO;EAE3E,OACE,IAAA7H,WAAA,CAAA2D,GAAA,EAAA3D,WAAA,CAAAiI,QAAA;IAAA5D,QAAA,EACE,IAAArE,WAAA,CAAA2D,GAAA,EAACtE,OAAA,CAAA6I,mBAAmB;MAAA7D,QAAA,EAClB,IAAArE,WAAA,CAAAkG,IAAA,EAACzE,KAAK,CAACmC,SAAS;QACdC,gBAAgB,EAAEmE,aAAc;QAChCG,OAAO,EAAE;UAACpE,WAAW,EAAE;QAAK,CAAE;QAC9BD,aAAa,EAAE;UACbC,WAAW,EAAE,KAAK;UAClBC,cAAc,EAAE;QAClB,CAAE;QAAAK,QAAA,GACDwD,OAAO,IAAI,IAAA7H,WAAA,CAAA2D,GAAA,EAAClC,KAAK,CAACgD,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAExB;QAAa,CAAE,CAAC,EAChEnC,MAAM,CAACsD,IAAI,CAACyD,MAAM,CAAC,CAACxD,GAAG,CAAC,UAACpD,GAAG,EAAEqD,CAAC;UAAA,OAC9B,IAAAxE,WAAA,CAAA2D,GAAA,EAAClC,KAAK,CAACgD,MAAM;YAEXC,IAAI,EAAEvD,GAAI;YACVwD,SAAS,EAAEoD,MAAM,CAAC5G,GAAG,CAAC,CAACU,IAAI,CAACnB,OAAQ;YACpCyH,OAAO,EAAEJ,MAAM,CAAC5G,GAAG,CAAC,CAACgH;UAAQ,GAHxB3D,CAIN,CAAC;QAAA,CACH,CAAC;MAAA,CACa;IAAC,CACC;EAAC,CACtB,CAAC;AAEP,CAAC;AAAC,IAAA4D,QAAA,GAEab,MAAM;AAAAc,OAAA,CAAA3H,OAAA,GAAA0H,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}