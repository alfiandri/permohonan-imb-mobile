{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDeviceSync = exports.getDeviceNameSync = exports.getDeviceName = exports.getDeviceId = exports.getDevice = exports.getCodenameSync = exports.getCodename = exports.getCarrierSync = exports.getCarrier = exports.getBundleId = exports.getBuildNumber = exports.getBuildIdSync = exports.getBuildId = exports.getBrightnessSync = exports.getBrightness = exports.getBrand = exports.getBootloaderSync = exports.getBootloader = exports.getBatteryLevelSync = exports.getBatteryLevel = exports.getBaseOsSync = exports.getBaseOs = exports.getAvailableLocationProvidersSync = exports.getAvailableLocationProviders = exports.getApplicationName = exports.getApiLevelSync = exports.getApiLevel = exports.getAndroidIdSync = exports.getAndroidId = exports.default = void 0;\nexports.getDeviceToken = getDeviceToken;\nexports.getFreeDiskStorage = exports.getFontScaleSync = exports.getFontScale = exports.getFirstInstallTimeSync = exports.getFirstInstallTime = exports.getFingerprintSync = exports.getFingerprint = exports.getDisplaySync = exports.getDisplay = exports.getDeviceTypeSync = exports.getDeviceType = void 0;\nexports.getFreeDiskStorageOld = getFreeDiskStorageOld;\nexports.getFreeDiskStorageOldSync = getFreeDiskStorageOldSync;\nexports.getLastUpdateTimeSync = exports.getLastUpdateTime = exports.getIpAddressSync = exports.getIpAddress = exports.getInstanceIdSync = exports.getInstanceId = exports.getInstallerPackageNameSync = exports.getInstallerPackageName = exports.getInstallReferrerSync = exports.getInstallReferrer = exports.getIncrementalSync = exports.getIncremental = exports.getHostSync = exports.getHost = exports.getHardwareSync = exports.getHardware = exports.getFreeDiskStorageSync = void 0;\nexports.getMacAddress = getMacAddress;\nexports.getMacAddressSync = getMacAddressSync;\nexports.getProductSync = exports.getProduct = exports.getPreviewSdkIntSync = exports.getPreviewSdkInt = exports.getPowerStateSync = exports.getPowerState = exports.getPhoneNumberSync = exports.getPhoneNumber = exports.getModel = exports.getMaxMemorySync = exports.getMaxMemory = exports.getManufacturerSync = exports.getManufacturer = void 0;\nexports.getReadableVersion = getReadableVersion;\nexports.getTotalDiskCapacity = exports.getTagsSync = exports.getTags = exports.getSystemVersion = exports.getSystemName = exports.getSystemAvailableFeaturesSync = exports.getSystemAvailableFeatures = exports.getSerialNumberSync = exports.getSerialNumber = exports.getSecurityPatchSync = exports.getSecurityPatch = void 0;\nexports.getTotalDiskCapacityOld = getTotalDiskCapacityOld;\nexports.getTotalDiskCapacityOldSync = getTotalDiskCapacityOldSync;\nexports.getUserAgent = exports.getUsedMemorySync = exports.getUsedMemory = exports.getUniqueIdSync = exports.getUniqueId = exports.getTypeSync = exports.getType = exports.getTotalMemorySync = exports.getTotalMemory = exports.getTotalDiskCapacitySync = void 0;\nexports.getVersion = exports.getUserAgentSync = void 0;\nexports.hasDynamicIsland = hasDynamicIsland;\nexports.hasHmsSync = exports.hasHms = exports.hasGmsSync = exports.hasGms = void 0;\nexports.hasNotch = hasNotch;\nexports.hasSystemFeature = hasSystemFeature;\nexports.hasSystemFeatureSync = hasSystemFeatureSync;\nexports.isKeyboardConnectedSync = exports.isKeyboardConnected = exports.isHeadphonesConnectedSync = exports.isHeadphonesConnected = exports.isEmulatorSync = exports.isEmulator = exports.isCameraPresentSync = exports.isCameraPresent = exports.isBatteryChargingSync = exports.isBatteryCharging = exports.isAirplaneModeSync = exports.isAirplaneMode = void 0;\nexports.isLandscape = isLandscape;\nexports.isLandscapeSync = isLandscapeSync;\nexports.isLocationEnabledSync = exports.isLocationEnabled = void 0;\nexports.isLowBatteryLevel = isLowBatteryLevel;\nexports.supportedAbisSync = exports.supportedAbis = exports.supported64BitAbisSync = exports.supported64BitAbis = exports.supported32BitAbisSync = exports.supported32BitAbis = exports.isTabletMode = exports.isTablet = exports.isPinOrFingerprintSetSync = exports.isPinOrFingerprintSet = exports.isMouseConnectedSync = exports.isMouseConnected = void 0;\nexports.syncUniqueId = syncUniqueId;\nexports.useBatteryLevel = useBatteryLevel;\nexports.useBatteryLevelIsLow = useBatteryLevelIsLow;\nexports.useBrightness = useBrightness;\nexports.useDeviceName = useDeviceName;\nexports.useFirstInstallTime = useFirstInstallTime;\nexports.useHasSystemFeature = useHasSystemFeature;\nexports.useIsEmulator = useIsEmulator;\nexports.useIsHeadphonesConnected = useIsHeadphonesConnected;\nexports.useManufacturer = useManufacturer;\nexports.usePowerState = usePowerState;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _reactNative = require(\"react-native\");\nvar _asyncHookWrappers = require(\"./internal/asyncHookWrappers\");\nvar _devicesWithDynamicIsland = _interopRequireDefault(require(\"./internal/devicesWithDynamicIsland\"));\nvar _devicesWithNotch = _interopRequireDefault(require(\"./internal/devicesWithNotch\"));\nvar _nativeInterface = _interopRequireDefault(require(\"./internal/nativeInterface\"));\nvar _supportedPlatformInfo = require(\"./internal/supported-platform-info\");\nvar _getSupportedPlatform = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'uniqueId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.getUniqueId();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getUniqueIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform2 = (0, _slicedToArray2.default)(_getSupportedPlatform, 2),\n  getUniqueId = _getSupportedPlatform2[0],\n  getUniqueIdSync = _getSupportedPlatform2[1];\nexports.getUniqueIdSync = getUniqueIdSync;\nexports.getUniqueId = getUniqueId;\nvar uniqueId;\nfunction syncUniqueId() {\n  return _syncUniqueId.apply(this, arguments);\n}\nfunction _syncUniqueId() {\n  _syncUniqueId = (0, _asyncToGenerator2.default)(function* () {\n    if (_reactNative.Platform.OS === 'ios') {\n      uniqueId = yield _nativeInterface.default.syncUniqueId();\n    } else {\n      uniqueId = yield getUniqueId();\n    }\n    return uniqueId;\n  });\n  return _syncUniqueId.apply(this, arguments);\n}\nvar _getSupportedPlatform3 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'instanceId',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getInstanceId();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getInstanceIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform4 = (0, _slicedToArray2.default)(_getSupportedPlatform3, 2),\n  getInstanceId = _getSupportedPlatform4[0],\n  getInstanceIdSync = _getSupportedPlatform4[1];\nexports.getInstanceIdSync = getInstanceIdSync;\nexports.getInstanceId = getInstanceId;\nvar _getSupportedPlatform5 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'serialNumber',\n    supportedPlatforms: ['android', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.getSerialNumber();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getSerialNumberSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform6 = (0, _slicedToArray2.default)(_getSupportedPlatform5, 2),\n  getSerialNumber = _getSupportedPlatform6[0],\n  getSerialNumberSync = _getSupportedPlatform6[1];\nexports.getSerialNumberSync = getSerialNumberSync;\nexports.getSerialNumber = getSerialNumber;\nvar _getSupportedPlatform7 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'androidId',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getAndroidId();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getAndroidIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform8 = (0, _slicedToArray2.default)(_getSupportedPlatform7, 2),\n  getAndroidId = _getSupportedPlatform8[0],\n  getAndroidIdSync = _getSupportedPlatform8[1];\nexports.getAndroidIdSync = getAndroidIdSync;\nexports.getAndroidId = getAndroidId;\nvar _getSupportedPlatform9 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.getIpAddress();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getIpAddressSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform10 = (0, _slicedToArray2.default)(_getSupportedPlatform9, 2),\n  getIpAddress = _getSupportedPlatform10[0],\n  getIpAddressSync = _getSupportedPlatform10[1];\nexports.getIpAddressSync = getIpAddressSync;\nexports.getIpAddress = getIpAddress;\nvar _getSupportedPlatform11 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'windows', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.isCameraPresent();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.isCameraPresentSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform12 = (0, _slicedToArray2.default)(_getSupportedPlatform11, 2),\n  isCameraPresent = _getSupportedPlatform12[0],\n  isCameraPresentSync = _getSupportedPlatform12[1];\nexports.isCameraPresentSync = isCameraPresentSync;\nexports.isCameraPresent = isCameraPresent;\nfunction getMacAddress() {\n  return _getMacAddress.apply(this, arguments);\n}\nfunction _getMacAddress() {\n  _getMacAddress = (0, _asyncToGenerator2.default)(function* () {\n    if (_reactNative.Platform.OS === 'android') {\n      return _nativeInterface.default.getMacAddress();\n    } else if (_reactNative.Platform.OS === 'ios') {\n      return '02:00:00:00:00:00';\n    }\n    return 'unknown';\n  });\n  return _getMacAddress.apply(this, arguments);\n}\nfunction getMacAddressSync() {\n  if (_reactNative.Platform.OS === 'android') {\n    return _nativeInterface.default.getMacAddressSync();\n  } else if (_reactNative.Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\nvar getDeviceId = function getDeviceId() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: function getter() {\n      return _nativeInterface.default.deviceId;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows']\n  });\n};\nexports.getDeviceId = getDeviceId;\nvar _getSupportedPlatform13 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'manufacturer',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _reactNative.Platform.OS == 'ios' ? Promise.resolve('Apple') : _nativeInterface.default.getSystemManufacturer();\n    },\n    syncGetter: function syncGetter() {\n      return _reactNative.Platform.OS == 'ios' ? 'Apple' : _nativeInterface.default.getSystemManufacturerSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform14 = (0, _slicedToArray2.default)(_getSupportedPlatform13, 2),\n  getManufacturer = _getSupportedPlatform14[0],\n  getManufacturerSync = _getSupportedPlatform14[1];\nexports.getManufacturerSync = getManufacturerSync;\nexports.getManufacturer = getManufacturer;\nvar getModel = function getModel() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.model;\n    }\n  });\n};\nexports.getModel = getModel;\nvar getBrand = function getBrand() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return _nativeInterface.default.brand;\n    }\n  });\n};\nexports.getBrand = getBrand;\nvar getSystemName = function getSystemName() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: function getter() {\n      return _reactNative.Platform.select({\n        ios: _nativeInterface.default.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown'\n      });\n    }\n  });\n};\nexports.getSystemName = getSystemName;\nvar getSystemVersion = function getSystemVersion() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return _nativeInterface.default.systemVersion;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion'\n  });\n};\nexports.getSystemVersion = getSystemVersion;\nvar _getSupportedPlatform15 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'buildId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.getBuildId();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getBuildIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform16 = (0, _slicedToArray2.default)(_getSupportedPlatform15, 2),\n  getBuildId = _getSupportedPlatform16[0],\n  getBuildIdSync = _getSupportedPlatform16[1];\nexports.getBuildIdSync = getBuildIdSync;\nexports.getBuildId = getBuildId;\nvar _getSupportedPlatform17 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'apiLevel',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getApiLevel();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getApiLevelSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform18 = (0, _slicedToArray2.default)(_getSupportedPlatform17, 2),\n  getApiLevel = _getSupportedPlatform18[0],\n  getApiLevelSync = _getSupportedPlatform18[1];\nexports.getApiLevelSync = getApiLevelSync;\nexports.getApiLevel = getApiLevel;\nvar getBundleId = function getBundleId() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return _nativeInterface.default.bundleId;\n    }\n  });\n};\nexports.getBundleId = getBundleId;\nvar _getSupportedPlatform19 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'installerPackageName',\n    supportedPlatforms: ['android', 'windows', 'ios'],\n    getter: function getter() {\n      return _nativeInterface.default.getInstallerPackageName();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getInstallerPackageNameSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform20 = (0, _slicedToArray2.default)(_getSupportedPlatform19, 2),\n  getInstallerPackageName = _getSupportedPlatform20[0],\n  getInstallerPackageNameSync = _getSupportedPlatform20[1];\nexports.getInstallerPackageNameSync = getInstallerPackageNameSync;\nexports.getInstallerPackageName = getInstallerPackageName;\nvar getApplicationName = function getApplicationName() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return _nativeInterface.default.appName;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows']\n  });\n};\nexports.getApplicationName = getApplicationName;\nvar getBuildNumber = function getBuildNumber() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.buildNumber;\n    },\n    defaultValue: 'unknown'\n  });\n};\nexports.getBuildNumber = getBuildNumber;\nvar getVersion = function getVersion() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.appVersion;\n    }\n  });\n};\nexports.getVersion = getVersion;\nfunction getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\nvar _getSupportedPlatform21 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.getDeviceName();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getDeviceNameSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform22 = (0, _slicedToArray2.default)(_getSupportedPlatform21, 2),\n  getDeviceName = _getSupportedPlatform22[0],\n  getDeviceNameSync = _getSupportedPlatform22[1];\nexports.getDeviceNameSync = getDeviceNameSync;\nexports.getDeviceName = getDeviceName;\nvar _getSupportedPlatform23 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.getUsedMemory();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getUsedMemorySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform24 = (0, _slicedToArray2.default)(_getSupportedPlatform23, 2),\n  getUsedMemory = _getSupportedPlatform24[0],\n  getUsedMemorySync = _getSupportedPlatform24[1];\nexports.getUsedMemorySync = getUsedMemorySync;\nexports.getUsedMemory = getUsedMemory;\nvar getUserAgent = function getUserAgent() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoAsync)({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.getUserAgent();\n    }\n  });\n};\nexports.getUserAgent = getUserAgent;\nvar getUserAgentSync = function getUserAgentSync() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.getUserAgentSync();\n    }\n  });\n};\nexports.getUserAgentSync = getUserAgentSync;\nvar _getSupportedPlatform25 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.getFontScale();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getFontScaleSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform26 = (0, _slicedToArray2.default)(_getSupportedPlatform25, 2),\n  getFontScale = _getSupportedPlatform26[0],\n  getFontScaleSync = _getSupportedPlatform26[1];\nexports.getFontScaleSync = getFontScaleSync;\nexports.getFontScale = getFontScale;\nvar _getSupportedPlatform27 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'bootloader',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getBootloader();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getBootloaderSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform28 = (0, _slicedToArray2.default)(_getSupportedPlatform27, 2),\n  getBootloader = _getSupportedPlatform28[0],\n  getBootloaderSync = _getSupportedPlatform28[1];\nexports.getBootloaderSync = getBootloaderSync;\nexports.getBootloader = getBootloader;\nvar _getSupportedPlatform29 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    getter: function getter() {\n      return _nativeInterface.default.getDevice();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getDeviceSync();\n    },\n    defaultValue: 'unknown',\n    memoKey: 'device',\n    supportedPlatforms: ['android']\n  }),\n  _getSupportedPlatform30 = (0, _slicedToArray2.default)(_getSupportedPlatform29, 2),\n  getDevice = _getSupportedPlatform30[0],\n  getDeviceSync = _getSupportedPlatform30[1];\nexports.getDeviceSync = getDeviceSync;\nexports.getDevice = getDevice;\nvar _getSupportedPlatform31 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'display',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getDisplay();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getDisplaySync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform32 = (0, _slicedToArray2.default)(_getSupportedPlatform31, 2),\n  getDisplay = _getSupportedPlatform32[0],\n  getDisplaySync = _getSupportedPlatform32[1];\nexports.getDisplaySync = getDisplaySync;\nexports.getDisplay = getDisplay;\nvar _getSupportedPlatform33 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'fingerprint',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getFingerprint();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getFingerprintSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform34 = (0, _slicedToArray2.default)(_getSupportedPlatform33, 2),\n  getFingerprint = _getSupportedPlatform34[0],\n  getFingerprintSync = _getSupportedPlatform34[1];\nexports.getFingerprintSync = getFingerprintSync;\nexports.getFingerprint = getFingerprint;\nvar _getSupportedPlatform35 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'hardware',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getHardware();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getHardwareSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform36 = (0, _slicedToArray2.default)(_getSupportedPlatform35, 2),\n  getHardware = _getSupportedPlatform36[0],\n  getHardwareSync = _getSupportedPlatform36[1];\nexports.getHardwareSync = getHardwareSync;\nexports.getHardware = getHardware;\nvar _getSupportedPlatform37 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'host',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getHost();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getHostSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform38 = (0, _slicedToArray2.default)(_getSupportedPlatform37, 2),\n  getHost = _getSupportedPlatform38[0],\n  getHostSync = _getSupportedPlatform38[1];\nexports.getHostSync = getHostSync;\nexports.getHost = getHost;\nvar _getSupportedPlatform39 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'product',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getProduct();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getProductSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform40 = (0, _slicedToArray2.default)(_getSupportedPlatform39, 2),\n  getProduct = _getSupportedPlatform40[0],\n  getProductSync = _getSupportedPlatform40[1];\nexports.getProductSync = getProductSync;\nexports.getProduct = getProduct;\nvar _getSupportedPlatform41 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'tags',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getTags();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getTagsSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform42 = (0, _slicedToArray2.default)(_getSupportedPlatform41, 2),\n  getTags = _getSupportedPlatform42[0],\n  getTagsSync = _getSupportedPlatform42[1];\nexports.getTagsSync = getTagsSync;\nexports.getTags = getTags;\nvar _getSupportedPlatform43 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'type',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getType();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getTypeSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform44 = (0, _slicedToArray2.default)(_getSupportedPlatform43, 2),\n  getType = _getSupportedPlatform44[0],\n  getTypeSync = _getSupportedPlatform44[1];\nexports.getTypeSync = getTypeSync;\nexports.getType = getType;\nvar _getSupportedPlatform45 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'baseOs',\n    supportedPlatforms: ['android', 'web', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.getBaseOs();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getBaseOsSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform46 = (0, _slicedToArray2.default)(_getSupportedPlatform45, 2),\n  getBaseOs = _getSupportedPlatform46[0],\n  getBaseOsSync = _getSupportedPlatform46[1];\nexports.getBaseOsSync = getBaseOsSync;\nexports.getBaseOs = getBaseOs;\nvar _getSupportedPlatform47 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'previewSdkInt',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getPreviewSdkInt();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getPreviewSdkIntSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform48 = (0, _slicedToArray2.default)(_getSupportedPlatform47, 2),\n  getPreviewSdkInt = _getSupportedPlatform48[0],\n  getPreviewSdkIntSync = _getSupportedPlatform48[1];\nexports.getPreviewSdkIntSync = getPreviewSdkIntSync;\nexports.getPreviewSdkInt = getPreviewSdkInt;\nvar _getSupportedPlatform49 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'securityPatch',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getSecurityPatch();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getSecurityPatchSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform50 = (0, _slicedToArray2.default)(_getSupportedPlatform49, 2),\n  getSecurityPatch = _getSupportedPlatform50[0],\n  getSecurityPatchSync = _getSupportedPlatform50[1];\nexports.getSecurityPatchSync = getSecurityPatchSync;\nexports.getSecurityPatch = getSecurityPatch;\nvar _getSupportedPlatform51 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'codeName',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getCodename();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getCodenameSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform52 = (0, _slicedToArray2.default)(_getSupportedPlatform51, 2),\n  getCodename = _getSupportedPlatform52[0],\n  getCodenameSync = _getSupportedPlatform52[1];\nexports.getCodenameSync = getCodenameSync;\nexports.getCodename = getCodename;\nvar _getSupportedPlatform53 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'incremental',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getIncremental();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getIncrementalSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform54 = (0, _slicedToArray2.default)(_getSupportedPlatform53, 2),\n  getIncremental = _getSupportedPlatform54[0],\n  getIncrementalSync = _getSupportedPlatform54[1];\nexports.getIncrementalSync = getIncrementalSync;\nexports.getIncremental = getIncremental;\nvar _getSupportedPlatform55 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'emulator',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.isEmulator();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.isEmulatorSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform56 = (0, _slicedToArray2.default)(_getSupportedPlatform55, 2),\n  isEmulator = _getSupportedPlatform56[0],\n  isEmulatorSync = _getSupportedPlatform56[1];\nexports.isEmulatorSync = isEmulatorSync;\nexports.isEmulator = isEmulator;\nvar isTablet = function isTablet() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: function getter() {\n      return _nativeInterface.default.isTablet;\n    }\n  });\n};\nexports.isTablet = isTablet;\nvar _getSupportedPlatform57 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.isPinOrFingerprintSet();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.isPinOrFingerprintSetSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform58 = (0, _slicedToArray2.default)(_getSupportedPlatform57, 2),\n  isPinOrFingerprintSet = _getSupportedPlatform58[0],\n  isPinOrFingerprintSetSync = _getSupportedPlatform58[1];\nexports.isPinOrFingerprintSetSync = isPinOrFingerprintSetSync;\nexports.isPinOrFingerprintSet = isPinOrFingerprintSet;\nvar notch;\nfunction hasNotch() {\n  if (notch === undefined) {\n    var _brand = getBrand();\n    var _model = getModel();\n    notch = _devicesWithNotch.default.findIndex(function (item) {\n      return item.brand.toLowerCase() === _brand.toLowerCase() && item.model.toLowerCase() === _model.toLowerCase();\n    }) !== -1;\n  }\n  return notch;\n}\nvar dynamicIsland;\nfunction hasDynamicIsland() {\n  if (dynamicIsland === undefined) {\n    var _brand = getBrand();\n    var _model = getModel();\n    dynamicIsland = _devicesWithDynamicIsland.default.findIndex(function (item) {\n      return item.brand.toLowerCase() === _brand.toLowerCase() && item.model.toLowerCase() === _model.toLowerCase();\n    }) !== -1;\n  }\n  return dynamicIsland;\n}\nvar _getSupportedPlatform59 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.hasGms();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.hasGmsSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform60 = (0, _slicedToArray2.default)(_getSupportedPlatform59, 2),\n  hasGms = _getSupportedPlatform60[0],\n  hasGmsSync = _getSupportedPlatform60[1];\nexports.hasGmsSync = hasGmsSync;\nexports.hasGms = hasGms;\nvar _getSupportedPlatform61 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.hasHms();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.hasHmsSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform62 = (0, _slicedToArray2.default)(_getSupportedPlatform61, 2),\n  hasHms = _getSupportedPlatform62[0],\n  hasHmsSync = _getSupportedPlatform62[1];\nexports.hasHmsSync = hasHmsSync;\nexports.hasHms = hasHms;\nvar _getSupportedPlatform63 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'firstInstallTime',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.getFirstInstallTime();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getFirstInstallTimeSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform64 = (0, _slicedToArray2.default)(_getSupportedPlatform63, 2),\n  getFirstInstallTime = _getSupportedPlatform64[0],\n  getFirstInstallTimeSync = _getSupportedPlatform64[1];\nexports.getFirstInstallTimeSync = getFirstInstallTimeSync;\nexports.getFirstInstallTime = getFirstInstallTime;\nvar _getSupportedPlatform65 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'installReferrer',\n    supportedPlatforms: ['android', 'windows', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.getInstallReferrer();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getInstallReferrerSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform66 = (0, _slicedToArray2.default)(_getSupportedPlatform65, 2),\n  getInstallReferrer = _getSupportedPlatform66[0],\n  getInstallReferrerSync = _getSupportedPlatform66[1];\nexports.getInstallReferrerSync = getInstallReferrerSync;\nexports.getInstallReferrer = getInstallReferrer;\nvar _getSupportedPlatform67 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'lastUpdateTime',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getLastUpdateTime();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getLastUpdateTimeSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform68 = (0, _slicedToArray2.default)(_getSupportedPlatform67, 2),\n  getLastUpdateTime = _getSupportedPlatform68[0],\n  getLastUpdateTimeSync = _getSupportedPlatform68[1];\nexports.getLastUpdateTimeSync = getLastUpdateTimeSync;\nexports.getLastUpdateTime = getLastUpdateTime;\nvar _getSupportedPlatform69 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getPhoneNumber();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getPhoneNumberSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform70 = (0, _slicedToArray2.default)(_getSupportedPlatform69, 2),\n  getPhoneNumber = _getSupportedPlatform70[0],\n  getPhoneNumberSync = _getSupportedPlatform70[1];\nexports.getPhoneNumberSync = getPhoneNumberSync;\nexports.getPhoneNumber = getPhoneNumber;\nvar _getSupportedPlatform71 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios'],\n    getter: function getter() {\n      return _nativeInterface.default.getCarrier();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getCarrierSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform72 = (0, _slicedToArray2.default)(_getSupportedPlatform71, 2),\n  getCarrier = _getSupportedPlatform72[0],\n  getCarrierSync = _getSupportedPlatform72[1];\nexports.getCarrierSync = getCarrierSync;\nexports.getCarrier = getCarrier;\nvar _getSupportedPlatform73 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'totalMemory',\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.getTotalMemory();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getTotalMemorySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform74 = (0, _slicedToArray2.default)(_getSupportedPlatform73, 2),\n  getTotalMemory = _getSupportedPlatform74[0],\n  getTotalMemorySync = _getSupportedPlatform74[1];\nexports.getTotalMemorySync = getTotalMemorySync;\nexports.getTotalMemory = getTotalMemory;\nvar _getSupportedPlatform75 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: 'maxMemory',\n    supportedPlatforms: ['android', 'windows', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.getMaxMemory();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getMaxMemorySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform76 = (0, _slicedToArray2.default)(_getSupportedPlatform75, 2),\n  getMaxMemory = _getSupportedPlatform76[0],\n  getMaxMemorySync = _getSupportedPlatform76[1];\nexports.getMaxMemorySync = getMaxMemorySync;\nexports.getMaxMemory = getMaxMemory;\nvar _getSupportedPlatform77 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.getTotalDiskCapacity();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getTotalDiskCapacitySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform78 = (0, _slicedToArray2.default)(_getSupportedPlatform77, 2),\n  getTotalDiskCapacity = _getSupportedPlatform78[0],\n  getTotalDiskCapacitySync = _getSupportedPlatform78[1];\nexports.getTotalDiskCapacitySync = getTotalDiskCapacitySync;\nexports.getTotalDiskCapacity = getTotalDiskCapacity;\nfunction getTotalDiskCapacityOld() {\n  return _getTotalDiskCapacityOld.apply(this, arguments);\n}\nfunction _getTotalDiskCapacityOld() {\n  _getTotalDiskCapacityOld = (0, _asyncToGenerator2.default)(function* () {\n    if (_reactNative.Platform.OS === 'android') {\n      return _nativeInterface.default.getTotalDiskCapacityOld();\n    }\n    if (_reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web') {\n      return getTotalDiskCapacity();\n    }\n    return -1;\n  });\n  return _getTotalDiskCapacityOld.apply(this, arguments);\n}\nfunction getTotalDiskCapacityOldSync() {\n  if (_reactNative.Platform.OS === 'android') {\n    return _nativeInterface.default.getTotalDiskCapacityOldSync();\n  }\n  if (_reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n  return -1;\n}\nvar _getSupportedPlatform79 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.getFreeDiskStorage();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getFreeDiskStorageSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform80 = (0, _slicedToArray2.default)(_getSupportedPlatform79, 2),\n  getFreeDiskStorage = _getSupportedPlatform80[0],\n  getFreeDiskStorageSync = _getSupportedPlatform80[1];\nexports.getFreeDiskStorageSync = getFreeDiskStorageSync;\nexports.getFreeDiskStorage = getFreeDiskStorage;\nfunction getFreeDiskStorageOld() {\n  return _getFreeDiskStorageOld.apply(this, arguments);\n}\nfunction _getFreeDiskStorageOld() {\n  _getFreeDiskStorageOld = (0, _asyncToGenerator2.default)(function* () {\n    if (_reactNative.Platform.OS === 'android') {\n      return _nativeInterface.default.getFreeDiskStorageOld();\n    }\n    if (_reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web') {\n      return getFreeDiskStorage();\n    }\n    return -1;\n  });\n  return _getFreeDiskStorageOld.apply(this, arguments);\n}\nfunction getFreeDiskStorageOldSync() {\n  if (_reactNative.Platform.OS === 'android') {\n    return _nativeInterface.default.getFreeDiskStorageOldSync();\n  }\n  if (_reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n  return -1;\n}\nvar _getSupportedPlatform81 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.getBatteryLevel();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getBatteryLevelSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform82 = (0, _slicedToArray2.default)(_getSupportedPlatform81, 2),\n  getBatteryLevel = _getSupportedPlatform82[0],\n  getBatteryLevelSync = _getSupportedPlatform82[1];\nexports.getBatteryLevelSync = getBatteryLevelSync;\nexports.getBatteryLevel = getBatteryLevel;\nvar _getSupportedPlatform83 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.getPowerState();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getPowerStateSync();\n    },\n    defaultValue: {}\n  }),\n  _getSupportedPlatform84 = (0, _slicedToArray2.default)(_getSupportedPlatform83, 2),\n  getPowerState = _getSupportedPlatform84[0],\n  getPowerStateSync = _getSupportedPlatform84[1];\nexports.getPowerStateSync = getPowerStateSync;\nexports.getPowerState = getPowerState;\nvar _getSupportedPlatform85 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.isBatteryCharging();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.isBatteryChargingSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform86 = (0, _slicedToArray2.default)(_getSupportedPlatform85, 2),\n  isBatteryCharging = _getSupportedPlatform86[0],\n  isBatteryChargingSync = _getSupportedPlatform86[1];\nexports.isBatteryChargingSync = isBatteryChargingSync;\nexports.isBatteryCharging = isBatteryCharging;\nfunction isLandscape() {\n  return _isLandscape.apply(this, arguments);\n}\nfunction _isLandscape() {\n  _isLandscape = (0, _asyncToGenerator2.default)(function* () {\n    return Promise.resolve(isLandscapeSync());\n  });\n  return _isLandscape.apply(this, arguments);\n}\nfunction isLandscapeSync() {\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n  return width >= height;\n}\nvar _getSupportedPlatform87 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.isAirplaneMode();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.isAirplaneModeSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform88 = (0, _slicedToArray2.default)(_getSupportedPlatform87, 2),\n  isAirplaneMode = _getSupportedPlatform88[0],\n  isAirplaneModeSync = _getSupportedPlatform88[1];\nexports.isAirplaneModeSync = isAirplaneModeSync;\nexports.isAirplaneMode = isAirplaneMode;\nvar getDeviceType = function getDeviceType() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return _nativeInterface.default.deviceType;\n    }\n  });\n};\nexports.getDeviceType = getDeviceType;\nvar getDeviceTypeSync = function getDeviceTypeSync() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoSync)({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return _nativeInterface.default.deviceType;\n    }\n  });\n};\nexports.getDeviceTypeSync = getDeviceTypeSync;\nvar _getSupportedPlatform89 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: '_supportedAbis',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return _nativeInterface.default.getSupportedAbis();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getSupportedAbisSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform90 = (0, _slicedToArray2.default)(_getSupportedPlatform89, 2),\n  supportedAbis = _getSupportedPlatform90[0],\n  supportedAbisSync = _getSupportedPlatform90[1];\nexports.supportedAbisSync = supportedAbisSync;\nexports.supportedAbis = supportedAbis;\nvar _getSupportedPlatform91 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: '_supported32BitAbis',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getSupported32BitAbis();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getSupported32BitAbisSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform92 = (0, _slicedToArray2.default)(_getSupportedPlatform91, 2),\n  supported32BitAbis = _getSupportedPlatform92[0],\n  supported32BitAbisSync = _getSupportedPlatform92[1];\nexports.supported32BitAbisSync = supported32BitAbisSync;\nexports.supported32BitAbis = supported32BitAbis;\nvar _getSupportedPlatform93 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    memoKey: '_supported64BitAbis',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getSupported64BitAbis();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getSupported64BitAbisSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform94 = (0, _slicedToArray2.default)(_getSupportedPlatform93, 2),\n  supported64BitAbis = _getSupportedPlatform94[0],\n  supported64BitAbisSync = _getSupportedPlatform94[1];\nexports.supported64BitAbisSync = supported64BitAbisSync;\nexports.supported64BitAbis = supported64BitAbis;\nfunction hasSystemFeature(_x) {\n  return _hasSystemFeature.apply(this, arguments);\n}\nfunction _hasSystemFeature() {\n  _hasSystemFeature = (0, _asyncToGenerator2.default)(function* (feature) {\n    if (_reactNative.Platform.OS === 'android') {\n      return _nativeInterface.default.hasSystemFeature(feature);\n    }\n    return false;\n  });\n  return _hasSystemFeature.apply(this, arguments);\n}\nfunction hasSystemFeatureSync(feature) {\n  if (_reactNative.Platform.OS === 'android') {\n    return _nativeInterface.default.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\nfunction isLowBatteryLevel(level) {\n  if (_reactNative.Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\nvar _getSupportedPlatform95 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return _nativeInterface.default.getSystemAvailableFeatures();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getSystemAvailableFeaturesSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform96 = (0, _slicedToArray2.default)(_getSupportedPlatform95, 2),\n  getSystemAvailableFeatures = _getSupportedPlatform96[0],\n  getSystemAvailableFeaturesSync = _getSupportedPlatform96[1];\nexports.getSystemAvailableFeaturesSync = getSystemAvailableFeaturesSync;\nexports.getSystemAvailableFeatures = getSystemAvailableFeatures;\nvar _getSupportedPlatform97 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: function getter() {\n      return _nativeInterface.default.isLocationEnabled();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.isLocationEnabledSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform98 = (0, _slicedToArray2.default)(_getSupportedPlatform97, 2),\n  isLocationEnabled = _getSupportedPlatform98[0],\n  isLocationEnabledSync = _getSupportedPlatform98[1];\nexports.isLocationEnabledSync = isLocationEnabledSync;\nexports.isLocationEnabled = isLocationEnabled;\nvar _getSupportedPlatform99 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios'],\n    getter: function getter() {\n      return _nativeInterface.default.isHeadphonesConnected();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.isHeadphonesConnectedSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform100 = (0, _slicedToArray2.default)(_getSupportedPlatform99, 2),\n  isHeadphonesConnected = _getSupportedPlatform100[0],\n  isHeadphonesConnectedSync = _getSupportedPlatform100[1];\nexports.isHeadphonesConnectedSync = isHeadphonesConnectedSync;\nexports.isHeadphonesConnected = isHeadphonesConnected;\nvar _getSupportedPlatform101 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return _nativeInterface.default.isMouseConnected();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.isMouseConnectedSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform102 = (0, _slicedToArray2.default)(_getSupportedPlatform101, 2),\n  isMouseConnected = _getSupportedPlatform102[0],\n  isMouseConnectedSync = _getSupportedPlatform102[1];\nexports.isMouseConnectedSync = isMouseConnectedSync;\nexports.isMouseConnected = isMouseConnected;\nvar _getSupportedPlatform103 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return _nativeInterface.default.isKeyboardConnected();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.isKeyboardConnectedSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform104 = (0, _slicedToArray2.default)(_getSupportedPlatform103, 2),\n  isKeyboardConnected = _getSupportedPlatform104[0],\n  isKeyboardConnectedSync = _getSupportedPlatform104[1];\nexports.isKeyboardConnectedSync = isKeyboardConnectedSync;\nexports.isKeyboardConnected = isKeyboardConnected;\nvar isTabletMode = function isTabletMode() {\n  return (0, _supportedPlatformInfo.getSupportedPlatformInfoAsync)({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return _nativeInterface.default.isTabletMode();\n    },\n    defaultValue: false\n  });\n};\nexports.isTabletMode = isTabletMode;\nvar _getSupportedPlatform105 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['android', 'ios'],\n    getter: function getter() {\n      return _nativeInterface.default.getAvailableLocationProviders();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getAvailableLocationProvidersSync();\n    },\n    defaultValue: {}\n  }),\n  _getSupportedPlatform106 = (0, _slicedToArray2.default)(_getSupportedPlatform105, 2),\n  getAvailableLocationProviders = _getSupportedPlatform106[0],\n  getAvailableLocationProvidersSync = _getSupportedPlatform106[1];\nexports.getAvailableLocationProvidersSync = getAvailableLocationProvidersSync;\nexports.getAvailableLocationProviders = getAvailableLocationProviders;\nvar _getSupportedPlatform107 = (0, _supportedPlatformInfo.getSupportedPlatformInfoFunctions)({\n    supportedPlatforms: ['ios'],\n    getter: function getter() {\n      return _nativeInterface.default.getBrightness();\n    },\n    syncGetter: function syncGetter() {\n      return _nativeInterface.default.getBrightnessSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform108 = (0, _slicedToArray2.default)(_getSupportedPlatform107, 2),\n  getBrightness = _getSupportedPlatform108[0],\n  getBrightnessSync = _getSupportedPlatform108[1];\nexports.getBrightnessSync = getBrightnessSync;\nexports.getBrightness = getBrightness;\nfunction getDeviceToken() {\n  return _getDeviceToken.apply(this, arguments);\n}\nfunction _getDeviceToken() {\n  _getDeviceToken = (0, _asyncToGenerator2.default)(function* () {\n    if (_reactNative.Platform.OS === 'ios') {\n      return _nativeInterface.default.getDeviceToken();\n    }\n    return 'unknown';\n  });\n  return _getDeviceToken.apply(this, arguments);\n}\nvar deviceInfoEmitter = new _reactNative.NativeEventEmitter(_reactNative.NativeModules.RNDeviceInfo);\nfunction useBatteryLevel() {\n  var _useState = (0, _react.useState)(null),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    batteryLevel = _useState2[0],\n    setBatteryLevel = _useState2[1];\n  (0, _react.useEffect)(function () {\n    var setInitialValue = function () {\n      var _ref = (0, _asyncToGenerator2.default)(function* () {\n        var initialValue = yield getBatteryLevel();\n        setBatteryLevel(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var onChange = function onChange(level) {\n      setBatteryLevel(level);\n    };\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevel;\n}\nfunction useBatteryLevelIsLow() {\n  var _useState3 = (0, _react.useState)(null),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    batteryLevelIsLow = _useState4[0],\n    setBatteryLevelIsLow = _useState4[1];\n  (0, _react.useEffect)(function () {\n    var setInitialValue = function () {\n      var _ref2 = (0, _asyncToGenerator2.default)(function* () {\n        var initialValue = yield getBatteryLevel();\n        isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    setInitialValue();\n    var onChange = function onChange(level) {\n      setBatteryLevelIsLow(level);\n    };\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevelIsLow;\n}\nfunction usePowerState() {\n  var _useState5 = (0, _react.useState)({}),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    powerState = _useState6[0],\n    setPowerState = _useState6[1];\n  (0, _react.useEffect)(function () {\n    var setInitialValue = function () {\n      var _ref3 = (0, _asyncToGenerator2.default)(function* () {\n        var initialValue = yield getPowerState();\n        setPowerState(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var onChange = function onChange(state) {\n      setPowerState(state);\n    };\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_powerStateDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return powerState;\n}\nfunction useIsHeadphonesConnected() {\n  return (0, _asyncHookWrappers.useOnEvent)('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\nfunction useFirstInstallTime() {\n  return (0, _asyncHookWrappers.useOnMount)(getFirstInstallTime, -1);\n}\nfunction useDeviceName() {\n  return (0, _asyncHookWrappers.useOnMount)(getDeviceName, 'unknown');\n}\nfunction useHasSystemFeature(feature) {\n  var asyncGetter = (0, _react.useCallback)(function () {\n    return hasSystemFeature(feature);\n  }, [feature]);\n  return (0, _asyncHookWrappers.useOnMount)(asyncGetter, false);\n}\nfunction useIsEmulator() {\n  return (0, _asyncHookWrappers.useOnMount)(isEmulator, false);\n}\nfunction useManufacturer() {\n  return (0, _asyncHookWrappers.useOnMount)(getManufacturer, 'unknown');\n}\nfunction useBrightness() {\n  var _useState7 = (0, _react.useState)(null),\n    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n    brightness = _useState8[0],\n    setBrightness = _useState8[1];\n  (0, _react.useEffect)(function () {\n    var setInitialValue = function () {\n      var _ref4 = (0, _asyncToGenerator2.default)(function* () {\n        var initialValue = yield getBrightness();\n        setBrightness(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var onChange = function onChange(value) {\n      setBrightness(value);\n    };\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_brightnessDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return brightness;\n}\nvar deviceInfoModule = {\n  getAndroidId: getAndroidId,\n  getAndroidIdSync: getAndroidIdSync,\n  getApiLevel: getApiLevel,\n  getApiLevelSync: getApiLevelSync,\n  getApplicationName: getApplicationName,\n  getAvailableLocationProviders: getAvailableLocationProviders,\n  getAvailableLocationProvidersSync: getAvailableLocationProvidersSync,\n  getBaseOs: getBaseOs,\n  getBaseOsSync: getBaseOsSync,\n  getBatteryLevel: getBatteryLevel,\n  getBatteryLevelSync: getBatteryLevelSync,\n  getBootloader: getBootloader,\n  getBootloaderSync: getBootloaderSync,\n  getBrand: getBrand,\n  getBuildId: getBuildId,\n  getBuildIdSync: getBuildIdSync,\n  getBuildNumber: getBuildNumber,\n  getBundleId: getBundleId,\n  getCarrier: getCarrier,\n  getCarrierSync: getCarrierSync,\n  getCodename: getCodename,\n  getCodenameSync: getCodenameSync,\n  getDevice: getDevice,\n  getDeviceId: getDeviceId,\n  getDeviceName: getDeviceName,\n  getDeviceNameSync: getDeviceNameSync,\n  getDeviceSync: getDeviceSync,\n  getDeviceToken: getDeviceToken,\n  getDeviceType: getDeviceType,\n  getDisplay: getDisplay,\n  getDisplaySync: getDisplaySync,\n  getFingerprint: getFingerprint,\n  getFingerprintSync: getFingerprintSync,\n  getFirstInstallTime: getFirstInstallTime,\n  getFirstInstallTimeSync: getFirstInstallTimeSync,\n  getFontScale: getFontScale,\n  getFontScaleSync: getFontScaleSync,\n  getFreeDiskStorage: getFreeDiskStorage,\n  getFreeDiskStorageOld: getFreeDiskStorageOld,\n  getFreeDiskStorageSync: getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync: getFreeDiskStorageOldSync,\n  getHardware: getHardware,\n  getHardwareSync: getHardwareSync,\n  getHost: getHost,\n  getHostSync: getHostSync,\n  getIncremental: getIncremental,\n  getIncrementalSync: getIncrementalSync,\n  getInstallerPackageName: getInstallerPackageName,\n  getInstallerPackageNameSync: getInstallerPackageNameSync,\n  getInstallReferrer: getInstallReferrer,\n  getInstallReferrerSync: getInstallReferrerSync,\n  getInstanceId: getInstanceId,\n  getInstanceIdSync: getInstanceIdSync,\n  getIpAddress: getIpAddress,\n  getIpAddressSync: getIpAddressSync,\n  getLastUpdateTime: getLastUpdateTime,\n  getLastUpdateTimeSync: getLastUpdateTimeSync,\n  getMacAddress: getMacAddress,\n  getMacAddressSync: getMacAddressSync,\n  getManufacturer: getManufacturer,\n  getManufacturerSync: getManufacturerSync,\n  getMaxMemory: getMaxMemory,\n  getMaxMemorySync: getMaxMemorySync,\n  getModel: getModel,\n  getPhoneNumber: getPhoneNumber,\n  getPhoneNumberSync: getPhoneNumberSync,\n  getPowerState: getPowerState,\n  getPowerStateSync: getPowerStateSync,\n  getPreviewSdkInt: getPreviewSdkInt,\n  getPreviewSdkIntSync: getPreviewSdkIntSync,\n  getProduct: getProduct,\n  getProductSync: getProductSync,\n  getReadableVersion: getReadableVersion,\n  getSecurityPatch: getSecurityPatch,\n  getSecurityPatchSync: getSecurityPatchSync,\n  getSerialNumber: getSerialNumber,\n  getSerialNumberSync: getSerialNumberSync,\n  getSystemAvailableFeatures: getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync: getSystemAvailableFeaturesSync,\n  getSystemName: getSystemName,\n  getSystemVersion: getSystemVersion,\n  getTags: getTags,\n  getTagsSync: getTagsSync,\n  getTotalDiskCapacity: getTotalDiskCapacity,\n  getTotalDiskCapacityOld: getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync: getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync: getTotalDiskCapacityOldSync,\n  getTotalMemory: getTotalMemory,\n  getTotalMemorySync: getTotalMemorySync,\n  getType: getType,\n  getTypeSync: getTypeSync,\n  getUniqueId: getUniqueId,\n  getUniqueIdSync: getUniqueIdSync,\n  getUsedMemory: getUsedMemory,\n  getUsedMemorySync: getUsedMemorySync,\n  getUserAgent: getUserAgent,\n  getUserAgentSync: getUserAgentSync,\n  getVersion: getVersion,\n  getBrightness: getBrightness,\n  getBrightnessSync: getBrightnessSync,\n  hasGms: hasGms,\n  hasGmsSync: hasGmsSync,\n  hasHms: hasHms,\n  hasHmsSync: hasHmsSync,\n  hasNotch: hasNotch,\n  hasDynamicIsland: hasDynamicIsland,\n  hasSystemFeature: hasSystemFeature,\n  hasSystemFeatureSync: hasSystemFeatureSync,\n  isAirplaneMode: isAirplaneMode,\n  isAirplaneModeSync: isAirplaneModeSync,\n  isBatteryCharging: isBatteryCharging,\n  isBatteryChargingSync: isBatteryChargingSync,\n  isCameraPresent: isCameraPresent,\n  isCameraPresentSync: isCameraPresentSync,\n  isEmulator: isEmulator,\n  isEmulatorSync: isEmulatorSync,\n  isHeadphonesConnected: isHeadphonesConnected,\n  isHeadphonesConnectedSync: isHeadphonesConnectedSync,\n  isLandscape: isLandscape,\n  isLandscapeSync: isLandscapeSync,\n  isLocationEnabled: isLocationEnabled,\n  isLocationEnabledSync: isLocationEnabledSync,\n  isPinOrFingerprintSet: isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync: isPinOrFingerprintSetSync,\n  isMouseConnected: isMouseConnected,\n  isMouseConnectedSync: isMouseConnectedSync,\n  isKeyboardConnected: isKeyboardConnected,\n  isKeyboardConnectedSync: isKeyboardConnectedSync,\n  isTabletMode: isTabletMode,\n  isTablet: isTablet,\n  supported32BitAbis: supported32BitAbis,\n  supported32BitAbisSync: supported32BitAbisSync,\n  supported64BitAbis: supported64BitAbis,\n  supported64BitAbisSync: supported64BitAbisSync,\n  supportedAbis: supportedAbis,\n  supportedAbisSync: supportedAbisSync,\n  syncUniqueId: syncUniqueId,\n  useBatteryLevel: useBatteryLevel,\n  useBatteryLevelIsLow: useBatteryLevelIsLow,\n  useDeviceName: useDeviceName,\n  useFirstInstallTime: useFirstInstallTime,\n  useHasSystemFeature: useHasSystemFeature,\n  useIsEmulator: useIsEmulator,\n  usePowerState: usePowerState,\n  useManufacturer: useManufacturer,\n  useIsHeadphonesConnected: useIsHeadphonesConnected,\n  useBrightness: useBrightness\n};\nvar _default = deviceInfoModule;\nexports.default = _default;","map":{"version":3,"names":["_react","require","_reactNative","_asyncHookWrappers","_devicesWithDynamicIsland","_interopRequireDefault","_devicesWithNotch","_nativeInterface","_supportedPlatformInfo","_getSupportedPlatform","getSupportedPlatformInfoFunctions","memoKey","supportedPlatforms","getter","RNDeviceInfo","getUniqueId","syncGetter","getUniqueIdSync","defaultValue","_getSupportedPlatform2","_slicedToArray2","default","exports","uniqueId","syncUniqueId","_syncUniqueId","apply","arguments","_asyncToGenerator2","Platform","OS","_getSupportedPlatform3","getInstanceId","getInstanceIdSync","_getSupportedPlatform4","_getSupportedPlatform5","getSerialNumber","getSerialNumberSync","_getSupportedPlatform6","_getSupportedPlatform7","getAndroidId","getAndroidIdSync","_getSupportedPlatform8","_getSupportedPlatform9","getIpAddress","getIpAddressSync","_getSupportedPlatform10","_getSupportedPlatform11","isCameraPresent","isCameraPresentSync","_getSupportedPlatform12","getMacAddress","_getMacAddress","getMacAddressSync","getDeviceId","getSupportedPlatformInfoSync","deviceId","_getSupportedPlatform13","Promise","resolve","getSystemManufacturer","getSystemManufacturerSync","_getSupportedPlatform14","getManufacturer","getManufacturerSync","getModel","model","getBrand","brand","getSystemName","select","ios","systemName","android","windows","getSystemVersion","systemVersion","_getSupportedPlatform15","getBuildId","getBuildIdSync","_getSupportedPlatform16","_getSupportedPlatform17","getApiLevel","getApiLevelSync","_getSupportedPlatform18","getBundleId","bundleId","_getSupportedPlatform19","getInstallerPackageName","getInstallerPackageNameSync","_getSupportedPlatform20","getApplicationName","appName","getBuildNumber","buildNumber","getVersion","appVersion","getReadableVersion","_getSupportedPlatform21","getDeviceName","getDeviceNameSync","_getSupportedPlatform22","_getSupportedPlatform23","getUsedMemory","getUsedMemorySync","_getSupportedPlatform24","getUserAgent","getSupportedPlatformInfoAsync","getUserAgentSync","_getSupportedPlatform25","getFontScale","getFontScaleSync","_getSupportedPlatform26","_getSupportedPlatform27","getBootloader","getBootloaderSync","_getSupportedPlatform28","_getSupportedPlatform29","getDevice","getDeviceSync","_getSupportedPlatform30","_getSupportedPlatform31","getDisplay","getDisplaySync","_getSupportedPlatform32","_getSupportedPlatform33","getFingerprint","getFingerprintSync","_getSupportedPlatform34","_getSupportedPlatform35","getHardware","getHardwareSync","_getSupportedPlatform36","_getSupportedPlatform37","getHost","getHostSync","_getSupportedPlatform38","_getSupportedPlatform39","getProduct","getProductSync","_getSupportedPlatform40","_getSupportedPlatform41","getTags","getTagsSync","_getSupportedPlatform42","_getSupportedPlatform43","getType","getTypeSync","_getSupportedPlatform44","_getSupportedPlatform45","getBaseOs","getBaseOsSync","_getSupportedPlatform46","_getSupportedPlatform47","getPreviewSdkInt","getPreviewSdkIntSync","_getSupportedPlatform48","_getSupportedPlatform49","getSecurityPatch","getSecurityPatchSync","_getSupportedPlatform50","_getSupportedPlatform51","getCodename","getCodenameSync","_getSupportedPlatform52","_getSupportedPlatform53","getIncremental","getIncrementalSync","_getSupportedPlatform54","_getSupportedPlatform55","isEmulator","isEmulatorSync","_getSupportedPlatform56","isTablet","_getSupportedPlatform57","isPinOrFingerprintSet","isPinOrFingerprintSetSync","_getSupportedPlatform58","notch","hasNotch","undefined","_brand","_model","devicesWithNotch","findIndex","item","toLowerCase","dynamicIsland","hasDynamicIsland","devicesWithDynamicIsland","_getSupportedPlatform59","hasGms","hasGmsSync","_getSupportedPlatform60","_getSupportedPlatform61","hasHms","hasHmsSync","_getSupportedPlatform62","_getSupportedPlatform63","getFirstInstallTime","getFirstInstallTimeSync","_getSupportedPlatform64","_getSupportedPlatform65","getInstallReferrer","getInstallReferrerSync","_getSupportedPlatform66","_getSupportedPlatform67","getLastUpdateTime","getLastUpdateTimeSync","_getSupportedPlatform68","_getSupportedPlatform69","getPhoneNumber","getPhoneNumberSync","_getSupportedPlatform70","_getSupportedPlatform71","getCarrier","getCarrierSync","_getSupportedPlatform72","_getSupportedPlatform73","getTotalMemory","getTotalMemorySync","_getSupportedPlatform74","_getSupportedPlatform75","getMaxMemory","getMaxMemorySync","_getSupportedPlatform76","_getSupportedPlatform77","getTotalDiskCapacity","getTotalDiskCapacitySync","_getSupportedPlatform78","getTotalDiskCapacityOld","_getTotalDiskCapacityOld","getTotalDiskCapacityOldSync","_getSupportedPlatform79","getFreeDiskStorage","getFreeDiskStorageSync","_getSupportedPlatform80","getFreeDiskStorageOld","_getFreeDiskStorageOld","getFreeDiskStorageOldSync","_getSupportedPlatform81","getBatteryLevel","getBatteryLevelSync","_getSupportedPlatform82","_getSupportedPlatform83","getPowerState","getPowerStateSync","_getSupportedPlatform84","_getSupportedPlatform85","isBatteryCharging","isBatteryChargingSync","_getSupportedPlatform86","isLandscape","_isLandscape","isLandscapeSync","_Dimensions$get","Dimensions","get","height","width","_getSupportedPlatform87","isAirplaneMode","isAirplaneModeSync","_getSupportedPlatform88","getDeviceType","deviceType","getDeviceTypeSync","_getSupportedPlatform89","getSupportedAbis","getSupportedAbisSync","_getSupportedPlatform90","supportedAbis","supportedAbisSync","_getSupportedPlatform91","getSupported32BitAbis","getSupported32BitAbisSync","_getSupportedPlatform92","supported32BitAbis","supported32BitAbisSync","_getSupportedPlatform93","getSupported64BitAbis","getSupported64BitAbisSync","_getSupportedPlatform94","supported64BitAbis","supported64BitAbisSync","hasSystemFeature","_x","_hasSystemFeature","feature","hasSystemFeatureSync","isLowBatteryLevel","level","_getSupportedPlatform95","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","_getSupportedPlatform96","_getSupportedPlatform97","isLocationEnabled","isLocationEnabledSync","_getSupportedPlatform98","_getSupportedPlatform99","isHeadphonesConnected","isHeadphonesConnectedSync","_getSupportedPlatform100","_getSupportedPlatform101","isMouseConnected","isMouseConnectedSync","_getSupportedPlatform102","_getSupportedPlatform103","isKeyboardConnected","isKeyboardConnectedSync","_getSupportedPlatform104","isTabletMode","_getSupportedPlatform105","getAvailableLocationProviders","getAvailableLocationProvidersSync","_getSupportedPlatform106","_getSupportedPlatform107","getBrightness","getBrightnessSync","_getSupportedPlatform108","getDeviceToken","_getDeviceToken","deviceInfoEmitter","NativeEventEmitter","NativeModules","useBatteryLevel","_useState","useState","_useState2","batteryLevel","setBatteryLevel","useEffect","setInitialValue","_ref","initialValue","onChange","subscription","addListener","remove","useBatteryLevelIsLow","_useState3","_useState4","batteryLevelIsLow","setBatteryLevelIsLow","_ref2","usePowerState","_useState5","_useState6","powerState","setPowerState","_ref3","state","useIsHeadphonesConnected","useOnEvent","useFirstInstallTime","useOnMount","useDeviceName","useHasSystemFeature","asyncGetter","useCallback","useIsEmulator","useManufacturer","useBrightness","_useState7","_useState8","brightness","setBrightness","_ref4","value","deviceInfoModule","_default"],"sources":["/Users/topremitdevice/Documents/alfi/portofolio/Permohonan-IMB-Mobile/node_modules/react-native-device-info/lib/module/index.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { useOnEvent, useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithDynamicIsland from \"./internal/devicesWithDynamicIsland\";\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport {\n  getSupportedPlatformInfoAsync,\n  getSupportedPlatformInfoFunctions,\n  getSupportedPlatformInfoSync,\n} from './internal/supported-platform-info';\nimport { DeviceInfoModule } from './internal/privateTypes';\nimport type {\n  AsyncHookResult,\n  DeviceType,\n  LocationProviderInfo,\n  PowerState,\n} from './internal/types';\n\nexport const [getUniqueId, getUniqueIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'uniqueId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getUniqueId(),\n  syncGetter: () => RNDeviceInfo.getUniqueIdSync(),\n  defaultValue: 'unknown',\n});\n\nlet uniqueId: string;\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = await getUniqueId();\n  }\n  return uniqueId;\n}\n\nexport const [getInstanceId, getInstanceIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getInstanceId(),\n  syncGetter: () => RNDeviceInfo.getInstanceIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getSerialNumber, getSerialNumberSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getSerialNumber(),\n  syncGetter: () => RNDeviceInfo.getSerialNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getAndroidId, getAndroidIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getAndroidId(),\n  syncGetter: () => RNDeviceInfo.getAndroidIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIpAddress, getIpAddressSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getIpAddress(),\n  syncGetter: () => RNDeviceInfo.getIpAddressSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isCameraPresent, isCameraPresentSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isCameraPresent(),\n  syncGetter: () => RNDeviceInfo.isCameraPresentSync(),\n  defaultValue: false,\n});\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport const getDeviceId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: () => RNDeviceInfo.deviceId,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const [getManufacturer, getManufacturerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () =>\n    Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer(),\n  syncGetter: () => (Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync()),\n  defaultValue: 'unknown',\n});\n\nexport const getModel = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: () => RNDeviceInfo.model,\n  });\n\nexport const getBrand = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.brand,\n  });\n\nexport const getSystemName = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: () =>\n      Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown',\n      }),\n  });\n\nexport const getSystemVersion = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.systemVersion,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion',\n  });\n\nexport const [getBuildId, getBuildIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getBuildId(),\n  syncGetter: () => RNDeviceInfo.getBuildIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getApiLevel, getApiLevelSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getApiLevel(),\n  syncGetter: () => RNDeviceInfo.getApiLevelSync(),\n  defaultValue: -1,\n});\n\nexport const getBundleId = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.bundleId,\n  });\n\nexport const [\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: () => RNDeviceInfo.getInstallerPackageName(),\n  syncGetter: () => RNDeviceInfo.getInstallerPackageNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const getApplicationName = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.appName,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const getBuildNumber = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.buildNumber,\n    defaultValue: 'unknown',\n  });\n\nexport const getVersion = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.appVersion,\n  });\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nexport const [getDeviceName, getDeviceNameSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getDeviceName(),\n  syncGetter: () => RNDeviceInfo.getDeviceNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getUsedMemory, getUsedMemorySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getUsedMemory(),\n  syncGetter: () => RNDeviceInfo.getUsedMemorySync(),\n  defaultValue: -1,\n});\n\nexport const getUserAgent = () =>\n  getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: () => RNDeviceInfo.getUserAgent(),\n  });\n\nexport const getUserAgentSync = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: () => RNDeviceInfo.getUserAgentSync(),\n  });\n\nexport const [getFontScale, getFontScaleSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFontScale(),\n  syncGetter: () => RNDeviceInfo.getFontScaleSync(),\n  defaultValue: -1,\n});\n\nexport const [getBootloader, getBootloaderSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getBootloader(),\n  syncGetter: () => RNDeviceInfo.getBootloaderSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getDevice, getDeviceSync] = getSupportedPlatformInfoFunctions({\n  getter: () => RNDeviceInfo.getDevice(),\n  syncGetter: () => RNDeviceInfo.getDeviceSync(),\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android'],\n});\n\nexport const [getDisplay, getDisplaySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getDisplay(),\n  syncGetter: () => RNDeviceInfo.getDisplaySync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getFingerprint, getFingerprintSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getFingerprint(),\n  syncGetter: () => RNDeviceInfo.getFingerprintSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHardware, getHardwareSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHardware(),\n  syncGetter: () => RNDeviceInfo.getHardwareSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHost, getHostSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHost(),\n  syncGetter: () => RNDeviceInfo.getHostSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getProduct, getProductSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getProduct(),\n  syncGetter: () => RNDeviceInfo.getProductSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTags, getTagsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getTags(),\n  syncGetter: () => RNDeviceInfo.getTagsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getType, getTypeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getType(),\n  syncGetter: () => RNDeviceInfo.getTypeSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getBaseOs, getBaseOsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: () => RNDeviceInfo.getBaseOs(),\n  syncGetter: () => RNDeviceInfo.getBaseOsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getPreviewSdkInt, getPreviewSdkIntSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPreviewSdkInt(),\n  syncGetter: () => RNDeviceInfo.getPreviewSdkIntSync(),\n  defaultValue: -1,\n});\n\nexport const [getSecurityPatch, getSecurityPatchSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSecurityPatch(),\n  syncGetter: () => RNDeviceInfo.getSecurityPatchSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCodename, getCodenameSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getCodename(),\n  syncGetter: () => RNDeviceInfo.getCodenameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIncremental, getIncrementalSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getIncremental(),\n  syncGetter: () => RNDeviceInfo.getIncrementalSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isEmulator, isEmulatorSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.isEmulator(),\n  syncGetter: () => RNDeviceInfo.isEmulatorSync(),\n  defaultValue: false,\n});\n\nexport const isTablet = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: () => RNDeviceInfo.isTablet,\n  });\n\nexport const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.isPinOrFingerprintSet(),\n    syncGetter: () => RNDeviceInfo.isPinOrFingerprintSetSync(),\n    defaultValue: false,\n  }\n);\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nlet dynamicIsland: boolean;\nexport function hasDynamicIsland() {\n  if (dynamicIsland === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    dynamicIsland =\n      devicesWithDynamicIsland.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return dynamicIsland;\n}\n\nexport const [hasGms, hasGmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasGms(),\n  syncGetter: () => RNDeviceInfo.hasGmsSync(),\n  defaultValue: false,\n});\n\nexport const [hasHms, hasHmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasHms(),\n  syncGetter: () => RNDeviceInfo.hasHmsSync(),\n  defaultValue: false,\n});\n\nexport const [getFirstInstallTime, getFirstInstallTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFirstInstallTime(),\n  syncGetter: () => RNDeviceInfo.getFirstInstallTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getInstallReferrer, getInstallReferrerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getInstallReferrer(),\n  syncGetter: () => RNDeviceInfo.getInstallReferrerSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getLastUpdateTime, getLastUpdateTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getLastUpdateTime(),\n  syncGetter: () => RNDeviceInfo.getLastUpdateTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getPhoneNumber, getPhoneNumberSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPhoneNumber(),\n  syncGetter: () => RNDeviceInfo.getPhoneNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCarrier, getCarrierSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getCarrier(),\n  syncGetter: () => RNDeviceInfo.getCarrierSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTotalMemory, getTotalMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalMemory(),\n  syncGetter: () => RNDeviceInfo.getTotalMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getMaxMemory, getMaxMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getMaxMemory(),\n  syncGetter: () => RNDeviceInfo.getMaxMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getTotalDiskCapacity, getTotalDiskCapacitySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalDiskCapacity(),\n  syncGetter: () => RNDeviceInfo.getTotalDiskCapacitySync(),\n  defaultValue: -1,\n});\n\nexport async function getTotalDiskCapacityOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacity();\n  }\n\n  return -1;\n}\n\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nexport const [getFreeDiskStorage, getFreeDiskStorageSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getFreeDiskStorage(),\n  syncGetter: () => RNDeviceInfo.getFreeDiskStorageSync(),\n  defaultValue: -1,\n});\n\nexport async function getFreeDiskStorageOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorage();\n  }\n\n  return -1;\n}\n\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nexport const [getBatteryLevel, getBatteryLevelSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getBatteryLevel(),\n  syncGetter: () => RNDeviceInfo.getBatteryLevelSync(),\n  defaultValue: -1,\n});\n\nexport const [getPowerState, getPowerStateSync] = getSupportedPlatformInfoFunctions<\n  Partial<PowerState>\n>({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getPowerState(),\n  syncGetter: () => RNDeviceInfo.getPowerStateSync(),\n  defaultValue: {},\n});\n\nexport const [isBatteryCharging, isBatteryChargingSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isBatteryCharging(),\n  syncGetter: () => RNDeviceInfo.isBatteryChargingSync(),\n  defaultValue: false,\n});\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport const [isAirplaneMode, isAirplaneModeSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: () => RNDeviceInfo.isAirplaneMode(),\n  syncGetter: () => RNDeviceInfo.isAirplaneModeSync(),\n  defaultValue: false,\n});\n\nexport const getDeviceType = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const getDeviceTypeSync = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const [supportedAbis, supportedAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getSupportedAbis(),\n  syncGetter: () => RNDeviceInfo.getSupportedAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported32BitAbis, supported32BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported32BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported32BitAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported64BitAbis, supported64BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported64BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported64BitAbisSync(),\n  defaultValue: [],\n});\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport function isLowBatteryLevel(level: number): boolean {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\n\nexport const [\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSystemAvailableFeatures(),\n  syncGetter: () => RNDeviceInfo.getSystemAvailableFeaturesSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [isLocationEnabled, isLocationEnabledSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: () => RNDeviceInfo.isLocationEnabled(),\n  syncGetter: () => RNDeviceInfo.isLocationEnabledSync(),\n  defaultValue: false,\n});\n\nexport const [isHeadphonesConnected, isHeadphonesConnectedSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios'],\n    getter: () => RNDeviceInfo.isHeadphonesConnected(),\n    syncGetter: () => RNDeviceInfo.isHeadphonesConnectedSync(),\n    defaultValue: false,\n  }\n);\n\nexport const [isMouseConnected, isMouseConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isMouseConnected(),\n  syncGetter: () => RNDeviceInfo.isMouseConnectedSync(),\n  defaultValue: false,\n});\n\nexport const [isKeyboardConnected, isKeyboardConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isKeyboardConnected(),\n  syncGetter: () => RNDeviceInfo.isKeyboardConnectedSync(),\n  defaultValue: false,\n});\n\nexport const isTabletMode = () =>\n  getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: () => RNDeviceInfo.isTabletMode(),\n    defaultValue: false,\n  });\n\nexport const [\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getAvailableLocationProviders(),\n  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync(),\n  defaultValue: {},\n});\n\nexport const [getBrightness, getBrightnessSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: () => RNDeviceInfo.getBrightness(),\n  syncGetter: () => RNDeviceInfo.getBrightnessSync(),\n  defaultValue: -1,\n});\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n    };\n\n    setInitialValue();\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): Partial<PowerState> {\n  const [powerState, setPowerState] = useState<Partial<PowerState>>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: Partial<PowerState> = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useIsHeadphonesConnected(): AsyncHookResult<boolean> {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport function useManufacturer(): AsyncHookResult<string> {\n  return useOnMount(getManufacturer, 'unknown');\n}\n\nexport function useBrightness(): number | null {\n  const [brightness, setBrightness] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBrightness();\n      setBrightness(initialValue);\n    };\n\n    const onChange = (value: number) => {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_brightnessDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return brightness;\n}\n\nexport type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst deviceInfoModule: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageOld,\n  getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUniqueIdSync,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  getBrightness,\n  getBrightnessSync,\n  hasGms,\n  hasGmsSync,\n  hasHms,\n  hasHmsSync,\n  hasNotch,\n  hasDynamicIsland,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isMouseConnected,\n  isMouseConnectedSync,\n  isKeyboardConnected,\n  isKeyboardConnectedSync,\n  isTabletMode,\n  isTablet,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n  useManufacturer,\n  useIsHeadphonesConnected,\n  useBrightness,\n};\n\nexport default deviceInfoModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}